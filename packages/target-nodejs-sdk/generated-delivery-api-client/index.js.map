{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../runtime.ts","../models/AuthenticatedState.ts","../models/ChannelType.ts","../models/DeviceType.ts","../models/LoggingType.ts","../models/MetricType.ts","../models/MobilePlatformType.ts","../models/OptionType.ts","../models/ScreenOrientationType.ts","../models/Action.ts","../models/Address.ts","../models/AnalyticsPayload.ts","../models/AnalyticsRequest.ts","../models/AnalyticsResponse.ts","../models/Application.ts","../models/AudienceManager.ts","../models/Browser.ts","../models/Context.ts","../models/CustomerId.ts","../models/DeliveryRequest.ts","../models/DeliveryResponse.ts","../models/ExecuteRequest.ts","../models/ExecuteResponse.ts","../models/ExperienceCloud.ts","../models/Geo.ts","../models/MboxRequest.ts","../models/MboxRequestAllOf.ts","../models/MboxResponse.ts","../models/Metric.ts","../models/MobilePlatform.ts","../models/Notification.ts","../models/NotificationAllOf.ts","../models/NotificationMbox.ts","../models/NotificationPageLoad.ts","../models/NotificationView.ts","../models/Option.ts","../models/Order.ts","../models/PageLoadResponse.ts","../models/PrefetchMboxResponse.ts","../models/PrefetchMboxResponseAllOf.ts","../models/PrefetchRequest.ts","../models/PrefetchResponse.ts","../models/Product.ts","../models/Property.ts","../models/QAMode.ts","../models/QAModePreviewIndex.ts","../models/RequestDetails.ts","../models/Screen.ts","../models/Trace.ts","../models/UnexpectedError.ts","../models/View.ts","../models/ViewRequest.ts","../models/ViewRequestAllOf.ts","../models/VisitorId.ts","../models/Window.ts","../models/DateTime.ts","../models/OneOf.ts","../apis/DeliveryAPIApi.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nexport const BASE_PATH = \"https://.tt.omtrdc.net\".replace(/\\/+$/, \"\");\nconst HTTP_NO_CONTENT = 204;\nconst DEFAULT_TIMEOUT:number = 3000;\n\nconst isBlob = (value: any) => typeof Blob !== 'undefined' && value instanceof Blob;\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n\n    private middleware: Middleware[];\n\n    constructor(protected configuration = new Configuration()) {\n        this.middleware = configuration.middleware;\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>();\n        next.middleware = next.middleware.concat(...middlewares);\n        return next;\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }));\n        return this.withMiddleware<T>(...middlewares);\n    }\n\n    protected async request(context: RequestOpts): Promise<Response> {\n        const { url, init } = this.createFetchParams(context);\n        const response = await this.fetchApi(url, init);\n        if (response.status >= 200 && response.status < 300) {\n            return response;\n        }\n        throw response;\n    }\n\n    private createFetchParams(context: RequestOpts) {\n        let url = this.configuration.basePath + context.path;\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query);\n        }\n        const body = (context.body instanceof FormData || context.body instanceof URLSearchParams || isBlob(context.body))\n\t    ? context.body\n\t    : JSON.stringify(context.body);\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers);\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials\n        };\n        return { url, init };\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init };\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams = await middleware.pre({\n                    fetch: this.fetchApi,\n                    ...fetchParams,\n                }) || fetchParams;\n            }\n        }\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init);\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response = await middleware.post({\n                    fetch: this.fetchApi,\n                    url,\n                    init,\n                    response: response.clone(),\n                }) || response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any;\n        const next = new constructor(this.configuration);\n        next.middleware = this.middleware.slice();\n        return next;\n    }\n};\n\nexport class RequiredError extends Error {\n    name: \"RequiredError\" = \"RequiredError\";\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\nexport type FetchAPI = GlobalFetch['fetch'];\n\nexport interface ConfigurationParameters {\n    basePath?: string; // override base path\n    fetchApi?: FetchAPI; // override for fetch implementation\n    middleware?: Middleware[]; // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n    username?: string; // parameter for basic security\n    password?: string; // parameter for basic security\n    apiKey?: string | ((name: string) => string); // parameter for apiKey security\n    accessToken?: string | ((name?: string, scopes?: string[]) => string); // parameter for oauth2 security\n    headers?: HTTPHeaders; //header params we want to use on every request\n    credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n    timeout?: number; //request timeout in ms\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    get basePath(): string {\n        return this.configuration.basePath || BASE_PATH;\n    }\n\n    get fetchApi(): FetchAPI {\n        const timeout = this.configuration.timeout;\n        const fetch = this.configuration.fetchApi || window.fetch.bind(window);\n\n        return function(input?: Request | string, init?: RequestInit): Promise<Response> {\n            return new Promise( (resolve, reject) => {\n                // Set timeout timer\n                let timer = setTimeout(\n                    () => reject( new Error('Request timed out') ),\n                    timeout\n                );\n\n                fetch( input, init ).then(\n                    response => resolve( response ),\n                    err => reject( err )\n                ).finally( () => clearTimeout(timer) );\n            })\n        };\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || [];\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring;\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username;\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password;\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey;\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey;\n        }\n        return undefined;\n    }\n\n    get accessToken(): ((name: string, scopes?: string[]) => string) | undefined {\n        const accessToken = this.configuration.accessToken;\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken;\n        }\n        return undefined;\n    }\n\n    get headers():  HTTPHeaders | undefined {\n        return this.configuration.headers;\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials;\n    }\n\n    get timeout(): number {\n        return this.configuration.timeout || DEFAULT_TIMEOUT;\n    }\n}\n\nexport type Json = any;\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS';\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = { [key: string]: string | number | null | boolean | Array<string | number | null | boolean> | HTTPQuery };\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';\n\nexport interface FetchParams {\n    url: string;\n    init: RequestInit;\n}\n\nexport interface RequestOpts {\n    path: string;\n    method: HTTPMethod;\n    headers: HTTPHeaders;\n    query?: HTTPQuery;\n    body?: HTTPBody;\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key];\n    return value !== null && value !== undefined;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key);\n            const value = params[key];\n            if (value instanceof Array) {\n                const multiValue = value.map(singleValue => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`);\n                return `${encodeURIComponent(fullKey)}=${multiValue}`;\n            }\n            if (value instanceof Object) {\n                return querystring(value as HTTPQuery, fullKey);\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n        })\n        .filter(part => part.length > 0)\n        .join('&');\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  return Object.keys(data).reduce(\n    (acc, key) => ({ ...acc, [key]: fn(data[key]) }),\n    {}\n  );\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport interface Consume {\n    contentType: string\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI;\n    url: string;\n    init: RequestInit;\n    response: Response;\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>;\n    post?(context: ResponseContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n    raw: Response;\n    value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n    constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}\n\n    async value(): Promise<T> {\n        return this.transformer(this.raw.status === HTTP_NO_CONTENT ? {} : await this.raw.json());\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined;\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob();\n    };\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text();\n    };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * \n * @export\n * @enum {string}\n */\nexport enum AuthenticatedState {\n    Unknown = 'unknown',\n    Authenticated = 'authenticated',\n    LoggedOut = 'logged_out'\n}\n\nexport function AuthenticatedStateFromJSON(json: any): AuthenticatedState {\n    return AuthenticatedStateFromJSONTyped(json, false);\n}\n\nexport function AuthenticatedStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthenticatedState {\n    return json as AuthenticatedState;\n}\n\nexport function AuthenticatedStateToJSON(value?: AuthenticatedState | null): any {\n    return value as any;\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Specifies the channel for the request. Only activities with the matching channel will be evaluated. \n * @export\n * @enum {string}\n */\nexport enum ChannelType {\n    Mobile = 'mobile',\n    Web = 'web'\n}\n\nexport function ChannelTypeFromJSON(json: any): ChannelType {\n    return ChannelTypeFromJSONTyped(json, false);\n}\n\nexport function ChannelTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelType {\n    return json as ChannelType;\n}\n\nexport function ChannelTypeToJSON(value?: ChannelType | null): any {\n    return value as any;\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Field is mandatory when Mobile Platform is specified. Only activities that match the specified deviceType or have the device type set to \\'null\\' will be evaluated. Ex if device type is \\'phone\\' in the delivery request, then only activities that have the device type equal to \\'phone\\' or set to \\'null\\' will be evaluated. An activity with \\'null\\' device type will be evaluated for requests for both, \\'phone\\' and \\'tablet\\'. \n * @export\n * @enum {string}\n */\nexport enum DeviceType {\n    Phone = 'phone',\n    Tablet = 'tablet'\n}\n\nexport function DeviceTypeFromJSON(json: any): DeviceType {\n    return DeviceTypeFromJSONTyped(json, false);\n}\n\nexport function DeviceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceType {\n    return json as DeviceType;\n}\n\nexport function DeviceTypeToJSON(value?: DeviceType | null): any {\n    return value as any;\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Indicates whether integraion will be done via client side (from the client) or server side (edge servers) \n * @export\n * @enum {string}\n */\nexport enum LoggingType {\n    ServerSide = 'server_side',\n    ClientSide = 'client_side'\n}\n\nexport function LoggingTypeFromJSON(json: any): LoggingType {\n    return LoggingTypeFromJSONTyped(json, false);\n}\n\nexport function LoggingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoggingType {\n    return json as LoggingType;\n}\n\nexport function LoggingTypeToJSON(value?: LoggingType | null): any {\n    return value as any;\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Notification type. Currently only click and display are supported.\n * @export\n * @enum {string}\n */\nexport enum MetricType {\n    Click = 'click',\n    Display = 'display'\n}\n\nexport function MetricTypeFromJSON(json: any): MetricType {\n    return MetricTypeFromJSONTyped(json, false);\n}\n\nexport function MetricTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MetricType {\n    return json as MetricType;\n}\n\nexport function MetricTypeToJSON(value?: MetricType | null): any {\n    return value as any;\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Only activities with the specified mobile platform type will be evaluated.\n * @export\n * @enum {string}\n */\nexport enum MobilePlatformType {\n    Android = 'android',\n    Ios = 'ios'\n}\n\nexport function MobilePlatformTypeFromJSON(json: any): MobilePlatformType {\n    return MobilePlatformTypeFromJSONTyped(json, false);\n}\n\nexport function MobilePlatformTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MobilePlatformType {\n    return json as MobilePlatformType;\n}\n\nexport function MobilePlatformTypeToJSON(value?: MobilePlatformType | null): any {\n    return value as any;\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * \n * @export\n * @enum {string}\n */\nexport enum OptionType {\n    Html = 'html',\n    Json = 'json',\n    Redirect = 'redirect',\n    Dynamic = 'dynamic',\n    Actions = 'actions'\n}\n\nexport function OptionTypeFromJSON(json: any): OptionType {\n    return OptionTypeFromJSONTyped(json, false);\n}\n\nexport function OptionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OptionType {\n    return json as OptionType;\n}\n\nexport function OptionTypeToJSON(value?: OptionType | null): any {\n    return value as any;\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * If not specified, all activities with any screen orientation will be evaluated. If specified, only the activities with the matching screen orientation will evaluated. \n * @export\n * @enum {string}\n */\nexport enum ScreenOrientationType {\n    Portrait = 'portrait',\n    Landscape = 'landscape'\n}\n\nexport function ScreenOrientationTypeFromJSON(json: any): ScreenOrientationType {\n    return ScreenOrientationTypeFromJSONTyped(json, false);\n}\n\nexport function ScreenOrientationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScreenOrientationType {\n    return json as ScreenOrientationType;\n}\n\nexport function ScreenOrientationTypeToJSON(value?: ScreenOrientationType | null): any {\n    return value as any;\n}\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    OneOfstringobject,\n    OneOfstringobjectFromJSON,\n    OneOfstringobjectFromJSONTyped,\n    OneOfstringobjectToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface Action\n */\nexport interface Action {\n    /**\n     * \n     * @type {string}\n     * @memberof Action\n     */\n    type?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Action\n     */\n    selector?: string;\n    /**\n     * \n     * @type {string}\n     * @memberof Action\n     */\n    cssSelector?: string;\n    /**\n     * \n     * @type {OneOfstringobject}\n     * @memberof Action\n     */\n    content?: OneOfstringobject;\n}\n\nexport function ActionFromJSON(json: any): Action {\n    return ActionFromJSONTyped(json, false);\n}\n\nexport function ActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Action {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'type': !exists(json, 'type') ? undefined : json['type'],\n        'selector': !exists(json, 'selector') ? undefined : json['selector'],\n        'cssSelector': !exists(json, 'cssSelector') ? undefined : json['cssSelector'],\n        'content': !exists(json, 'content') ? undefined : OneOfstringobjectFromJSON(json['content']),\n    };\n}\n\nexport function ActionToJSON(value?: Action | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'type': value.type,\n        'selector': value.selector,\n        'cssSelector': value.cssSelector,\n        'content': OneOfstringobjectToJSON(value.content),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The address object. It indicates the current URL and the referring URL.\n * @export\n * @interface Address\n */\nexport interface Address {\n    /**\n     * URL\n     * @type {string}\n     * @memberof Address\n     */\n    url?: string;\n    /**\n     * referral URL\n     * @type {string}\n     * @memberof Address\n     */\n    referringUrl?: string;\n}\n\nexport function AddressFromJSON(json: any): Address {\n    return AddressFromJSONTyped(json, false);\n}\n\nexport function AddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): Address {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'url': !exists(json, 'url') ? undefined : json['url'],\n        'referringUrl': !exists(json, 'referringUrl') ? undefined : json['referringUrl'],\n    };\n}\n\nexport function AddressToJSON(value?: Address | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'url': value.url,\n        'referringUrl': value.referringUrl,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Analytics payload for client side integration that should be sent to Analytics after content has been applied. \n * @export\n * @interface AnalyticsPayload\n */\nexport interface AnalyticsPayload {\n    /**\n     * Indicates to Adobe Analytics that the payload is an Adobe Target type\n     * @type {string}\n     * @memberof AnalyticsPayload\n     */\n    pe?: string;\n    /**\n     * Contains Target metadata that describes the activity and experience\n     * @type {string}\n     * @memberof AnalyticsPayload\n     */\n    tnta?: string;\n}\n\nexport function AnalyticsPayloadFromJSON(json: any): AnalyticsPayload {\n    return AnalyticsPayloadFromJSONTyped(json, false);\n}\n\nexport function AnalyticsPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsPayload {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'pe': !exists(json, 'pe') ? undefined : json['pe'],\n        'tnta': !exists(json, 'tnta') ? undefined : json['tnta'],\n    };\n}\n\nexport function AnalyticsPayloadToJSON(value?: AnalyticsPayload | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'pe': value.pe,\n        'tnta': value.tnta,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    LoggingType,\n    LoggingTypeFromJSON,\n    LoggingTypeFromJSONTyped,\n    LoggingTypeToJSON,\n} from './';\n\n/**\n * Integration with Adobe Analytics (A4T)\n * @export\n * @interface AnalyticsRequest\n */\nexport interface AnalyticsRequest {\n    /**\n     * Supplemental data id, used for **server side** integrations. Format <16 hexadecimal digits>-<16 hexadecimal digits> \n     * @type {string}\n     * @memberof AnalyticsRequest\n     */\n    supplementalDataId?: string;\n    /**\n     * \n     * @type {LoggingType}\n     * @memberof AnalyticsRequest\n     */\n    logging?: LoggingType;\n    /**\n     * tracking server\n     * @type {string}\n     * @memberof AnalyticsRequest\n     */\n    trackingServer?: string;\n    /**\n     * secure tracking server\n     * @type {string}\n     * @memberof AnalyticsRequest\n     */\n    trackingServerSecure?: string;\n}\n\nexport function AnalyticsRequestFromJSON(json: any): AnalyticsRequest {\n    return AnalyticsRequestFromJSONTyped(json, false);\n}\n\nexport function AnalyticsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'supplementalDataId': !exists(json, 'supplementalDataId') ? undefined : json['supplementalDataId'],\n        'logging': !exists(json, 'logging') ? undefined : LoggingTypeFromJSON(json['logging']),\n        'trackingServer': !exists(json, 'trackingServer') ? undefined : json['trackingServer'],\n        'trackingServerSecure': !exists(json, 'trackingServerSecure') ? undefined : json['trackingServerSecure'],\n    };\n}\n\nexport function AnalyticsRequestToJSON(value?: AnalyticsRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'supplementalDataId': value.supplementalDataId,\n        'logging': LoggingTypeToJSON(value.logging),\n        'trackingServer': value.trackingServer,\n        'trackingServerSecure': value.trackingServerSecure,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AnalyticsPayload,\n    AnalyticsPayloadFromJSON,\n    AnalyticsPayloadFromJSONTyped,\n    AnalyticsPayloadToJSON,\n} from './';\n\n/**\n * Contains the analytics payload metadata\n * @export\n * @interface AnalyticsResponse\n */\nexport interface AnalyticsResponse {\n    /**\n     * \n     * @type {AnalyticsPayload}\n     * @memberof AnalyticsResponse\n     */\n    payload?: AnalyticsPayload;\n}\n\nexport function AnalyticsResponseFromJSON(json: any): AnalyticsResponse {\n    return AnalyticsResponseFromJSONTyped(json, false);\n}\n\nexport function AnalyticsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnalyticsResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'payload': !exists(json, 'payload') ? undefined : AnalyticsPayloadFromJSON(json['payload']),\n    };\n}\n\nexport function AnalyticsResponseToJSON(value?: AnalyticsResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'payload': AnalyticsPayloadToJSON(value.payload),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Application identifiers. If specified, should match the with the one from the activity.\n * @export\n * @interface Application\n */\nexport interface Application {\n    /**\n     * Application ID. If not specified - all activities with any applicationId will be evaluated. If specified - only activities with the matching applicationId will be evaluated. \n     * @type {string}\n     * @memberof Application\n     */\n    id?: string;\n    /**\n     * Application name. If not specified - all activities with any applicationName will be evaluated. If specified - only activities with specified applicationName will be evaluated. \n     * @type {string}\n     * @memberof Application\n     */\n    name?: string;\n    /**\n     * Application version If not specified - all activities with any applicationVersion will not be evaluated. If specified - only activities with specific applicationVersion will be evaluated. \n     * @type {string}\n     * @memberof Application\n     */\n    version?: string;\n}\n\nexport function ApplicationFromJSON(json: any): Application {\n    return ApplicationFromJSONTyped(json, false);\n}\n\nexport function ApplicationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Application {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'version': !exists(json, 'version') ? undefined : json['version'],\n    };\n}\n\nexport function ApplicationToJSON(value?: Application | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'name': value.name,\n        'version': value.version,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Audience Manager Integration (AAM).\n * @export\n * @interface AudienceManager\n */\nexport interface AudienceManager {\n    /**\n     * DCS location hint. Used to determine which AAM DCS Endpoint to hit in order to retrieve the profile. \n     * @type {number}\n     * @memberof AudienceManager\n     */\n    locationHint?: number;\n    /**\n     * AAM Blob. Used to send additional data to AAM. Validation   * Cannot be blank. \n     * @type {string}\n     * @memberof AudienceManager\n     */\n    blob?: string;\n}\n\nexport function AudienceManagerFromJSON(json: any): AudienceManager {\n    return AudienceManagerFromJSONTyped(json, false);\n}\n\nexport function AudienceManagerFromJSONTyped(json: any, ignoreDiscriminator: boolean): AudienceManager {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'locationHint': !exists(json, 'locationHint') ? undefined : json['locationHint'],\n        'blob': !exists(json, 'blob') ? undefined : json['blob'],\n    };\n}\n\nexport function AudienceManagerToJSON(value?: AudienceManager | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'locationHint': value.locationHint,\n        'blob': value.blob,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Browser object may be specified only when the Channel is Web.\n * @export\n * @interface Browser\n */\nexport interface Browser {\n    /**\n     * Current web page host.\n     * @type {string}\n     * @memberof Browser\n     */\n    host?: string;\n    /**\n     * This is an optional field, added to help with device detection using device atlas. \n     * @type {string}\n     * @memberof Browser\n     */\n    webGLRenderer?: string;\n}\n\nexport function BrowserFromJSON(json: any): Browser {\n    return BrowserFromJSONTyped(json, false);\n}\n\nexport function BrowserFromJSONTyped(json: any, ignoreDiscriminator: boolean): Browser {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'host': !exists(json, 'host') ? undefined : json['host'],\n        'webGLRenderer': !exists(json, 'webGLRenderer') ? undefined : json['webGLRenderer'],\n    };\n}\n\nexport function BrowserToJSON(value?: Browser | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'host': value.host,\n        'webGLRenderer': value.webGLRenderer,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Address,\n    AddressFromJSON,\n    AddressFromJSONTyped,\n    AddressToJSON,\n    Application,\n    ApplicationFromJSON,\n    ApplicationFromJSONTyped,\n    ApplicationToJSON,\n    Browser,\n    BrowserFromJSON,\n    BrowserFromJSONTyped,\n    BrowserToJSON,\n    ChannelType,\n    ChannelTypeFromJSON,\n    ChannelTypeFromJSONTyped,\n    ChannelTypeToJSON,\n    Geo,\n    GeoFromJSON,\n    GeoFromJSONTyped,\n    GeoToJSON,\n    MobilePlatform,\n    MobilePlatformFromJSON,\n    MobilePlatformFromJSONTyped,\n    MobilePlatformToJSON,\n    Screen,\n    ScreenFromJSON,\n    ScreenFromJSONTyped,\n    ScreenToJSON,\n    Window,\n    WindowFromJSON,\n    WindowFromJSONTyped,\n    WindowToJSON,\n} from './';\n\n/**\n * Specifies the context for the request, IE if it a web request then is should include user agent etc.\n * @export\n * @interface Context\n */\nexport interface Context {\n    /**\n     * \n     * @type {ChannelType}\n     * @memberof Context\n     */\n    channel: ChannelType;\n    /**\n     * \n     * @type {MobilePlatform}\n     * @memberof Context\n     */\n    mobilePlatform?: MobilePlatform;\n    /**\n     * \n     * @type {Application}\n     * @memberof Context\n     */\n    application?: Application;\n    /**\n     * \n     * @type {Screen}\n     * @memberof Context\n     */\n    screen?: Screen;\n    /**\n     * \n     * @type {Window}\n     * @memberof Context\n     */\n    window?: Window;\n    /**\n     * \n     * @type {Browser}\n     * @memberof Context\n     */\n    browser?: Browser;\n    /**\n     * \n     * @type {Address}\n     * @memberof Context\n     */\n    address?: Address;\n    /**\n     * \n     * @type {Geo}\n     * @memberof Context\n     */\n    geo?: Geo;\n    /**\n     * Specifies minutes from UTC for specific client\n     * @type {number}\n     * @memberof Context\n     */\n    timeOffsetInMinutes?: number;\n    /**\n     * User-Agent should be sent only via this property. HTTP header User-Agent is ignored.\n     * @type {string}\n     * @memberof Context\n     */\n    userAgent?: string;\n    /**\n     * In case beacon = true is provided in the request, the server will return a 204 No Content response with no response body. \n     * @type {boolean}\n     * @memberof Context\n     */\n    beacon?: boolean;\n}\n\nexport function ContextFromJSON(json: any): Context {\n    return ContextFromJSONTyped(json, false);\n}\n\nexport function ContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): Context {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'channel': ChannelTypeFromJSON(json['channel']),\n        'mobilePlatform': !exists(json, 'mobilePlatform') ? undefined : MobilePlatformFromJSON(json['mobilePlatform']),\n        'application': !exists(json, 'application') ? undefined : ApplicationFromJSON(json['application']),\n        'screen': !exists(json, 'screen') ? undefined : ScreenFromJSON(json['screen']),\n        'window': !exists(json, 'window') ? undefined : WindowFromJSON(json['window']),\n        'browser': !exists(json, 'browser') ? undefined : BrowserFromJSON(json['browser']),\n        'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),\n        'geo': !exists(json, 'geo') ? undefined : GeoFromJSON(json['geo']),\n        'timeOffsetInMinutes': !exists(json, 'timeOffsetInMinutes') ? undefined : json['timeOffsetInMinutes'],\n        'userAgent': !exists(json, 'userAgent') ? undefined : json['userAgent'],\n        'beacon': !exists(json, 'beacon') ? undefined : json['beacon'],\n    };\n}\n\nexport function ContextToJSON(value?: Context | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'channel': ChannelTypeToJSON(value.channel),\n        'mobilePlatform': MobilePlatformToJSON(value.mobilePlatform),\n        'application': ApplicationToJSON(value.application),\n        'screen': ScreenToJSON(value.screen),\n        'window': WindowToJSON(value.window),\n        'browser': BrowserToJSON(value.browser),\n        'address': AddressToJSON(value.address),\n        'geo': GeoToJSON(value.geo),\n        'timeOffsetInMinutes': value.timeOffsetInMinutes,\n        'userAgent': value.userAgent,\n        'beacon': value.beacon,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AuthenticatedState,\n    AuthenticatedStateFromJSON,\n    AuthenticatedStateFromJSONTyped,\n    AuthenticatedStateToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface CustomerId\n */\nexport interface CustomerId {\n    /**\n     * \n     * @type {string}\n     * @memberof CustomerId\n     */\n    id: string;\n    /**\n     * This is the **alias** used when setting up a CRS datasource in the Marketing Cloud UI.\n     * @type {string}\n     * @memberof CustomerId\n     */\n    integrationCode: string;\n    /**\n     * \n     * @type {AuthenticatedState}\n     * @memberof CustomerId\n     */\n    authenticatedState: AuthenticatedState;\n}\n\nexport function CustomerIdFromJSON(json: any): CustomerId {\n    return CustomerIdFromJSONTyped(json, false);\n}\n\nexport function CustomerIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerId {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': json['id'],\n        'integrationCode': json['integrationCode'],\n        'authenticatedState': AuthenticatedStateFromJSON(json['authenticatedState']),\n    };\n}\n\nexport function CustomerIdToJSON(value?: CustomerId | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'integrationCode': value.integrationCode,\n        'authenticatedState': AuthenticatedStateToJSON(value.authenticatedState),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Context,\n    ContextFromJSON,\n    ContextFromJSONTyped,\n    ContextToJSON,\n    ExecuteRequest,\n    ExecuteRequestFromJSON,\n    ExecuteRequestFromJSONTyped,\n    ExecuteRequestToJSON,\n    ExperienceCloud,\n    ExperienceCloudFromJSON,\n    ExperienceCloudFromJSONTyped,\n    ExperienceCloudToJSON,\n    Notification,\n    NotificationFromJSON,\n    NotificationFromJSONTyped,\n    NotificationToJSON,\n    PrefetchRequest,\n    PrefetchRequestFromJSON,\n    PrefetchRequestFromJSONTyped,\n    PrefetchRequestToJSON,\n    Property,\n    PropertyFromJSON,\n    PropertyFromJSONTyped,\n    PropertyToJSON,\n    QAMode,\n    QAModeFromJSON,\n    QAModeFromJSONTyped,\n    QAModeToJSON,\n    Trace,\n    TraceFromJSON,\n    TraceFromJSONTyped,\n    TraceToJSON,\n    VisitorId,\n    VisitorIdFromJSON,\n    VisitorIdFromJSONTyped,\n    VisitorIdToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface DeliveryRequest\n */\nexport interface DeliveryRequest {\n    /**\n     * The request ID that will be returned in the response. In case it is not provided, an UUID is generated and returned automatically. \n     * @type {string}\n     * @memberof DeliveryRequest\n     */\n    requestId?: string;\n    /**\n     * If not present it will be automatically generated (UUID). If present,  second and subsequent requests with the same id will not increment impressions to activities/metrics. Similar to page id. \n     * @type {string}\n     * @memberof DeliveryRequest\n     */\n    impressionId?: string;\n    /**\n     * \n     * @type {VisitorId}\n     * @memberof DeliveryRequest\n     */\n    id?: VisitorId;\n    /**\n     * Valid client environment id. If not specified host will be determined base on the provided host.\n     * @type {number}\n     * @memberof DeliveryRequest\n     */\n    environmentId?: number;\n    /**\n     * \n     * @type {Property}\n     * @memberof DeliveryRequest\n     */\n    property?: Property;\n    /**\n     * \n     * @type {Trace}\n     * @memberof DeliveryRequest\n     */\n    trace?: Trace;\n    /**\n     * \n     * @type {Context}\n     * @memberof DeliveryRequest\n     */\n    context: Context;\n    /**\n     * \n     * @type {ExperienceCloud}\n     * @memberof DeliveryRequest\n     */\n    experienceCloud?: ExperienceCloud;\n    /**\n     * \n     * @type {ExecuteRequest}\n     * @memberof DeliveryRequest\n     */\n    execute?: ExecuteRequest;\n    /**\n     * \n     * @type {PrefetchRequest}\n     * @memberof DeliveryRequest\n     */\n    prefetch?: PrefetchRequest;\n    /**\n     * Notifications for the displayed content, clicked selectors, and/or visited views or mboxes.\n     * @type {Array<Notification>}\n     * @memberof DeliveryRequest\n     */\n    notifications?: Array<Notification>;\n    /**\n     * \n     * @type {QAMode}\n     * @memberof DeliveryRequest\n     */\n    qaMode?: QAMode;\n}\n\nexport function DeliveryRequestFromJSON(json: any): DeliveryRequest {\n    return DeliveryRequestFromJSONTyped(json, false);\n}\n\nexport function DeliveryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeliveryRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'requestId': !exists(json, 'requestId') ? undefined : json['requestId'],\n        'impressionId': !exists(json, 'impressionId') ? undefined : json['impressionId'],\n        'id': !exists(json, 'id') ? undefined : VisitorIdFromJSON(json['id']),\n        'environmentId': !exists(json, 'environmentId') ? undefined : json['environmentId'],\n        'property': !exists(json, 'property') ? undefined : PropertyFromJSON(json['property']),\n        'trace': !exists(json, 'trace') ? undefined : TraceFromJSON(json['trace']),\n        'context': ContextFromJSON(json['context']),\n        'experienceCloud': !exists(json, 'experienceCloud') ? undefined : ExperienceCloudFromJSON(json['experienceCloud']),\n        'execute': !exists(json, 'execute') ? undefined : ExecuteRequestFromJSON(json['execute']),\n        'prefetch': !exists(json, 'prefetch') ? undefined : PrefetchRequestFromJSON(json['prefetch']),\n        'notifications': !exists(json, 'notifications') ? undefined : ((json['notifications'] as Array<any>).map(NotificationFromJSON)),\n        'qaMode': !exists(json, 'qaMode') ? undefined : QAModeFromJSON(json['qaMode']),\n    };\n}\n\nexport function DeliveryRequestToJSON(value?: DeliveryRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'requestId': value.requestId,\n        'impressionId': value.impressionId,\n        'id': VisitorIdToJSON(value.id),\n        'environmentId': value.environmentId,\n        'property': PropertyToJSON(value.property),\n        'trace': TraceToJSON(value.trace),\n        'context': ContextToJSON(value.context),\n        'experienceCloud': ExperienceCloudToJSON(value.experienceCloud),\n        'execute': ExecuteRequestToJSON(value.execute),\n        'prefetch': PrefetchRequestToJSON(value.prefetch),\n        'notifications': value.notifications === undefined ? undefined : ((value.notifications as Array<any>).map(NotificationToJSON)),\n        'qaMode': QAModeToJSON(value.qaMode),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ExecuteResponse,\n    ExecuteResponseFromJSON,\n    ExecuteResponseFromJSONTyped,\n    ExecuteResponseToJSON,\n    PrefetchResponse,\n    PrefetchResponseFromJSON,\n    PrefetchResponseFromJSONTyped,\n    PrefetchResponseToJSON,\n    VisitorId,\n    VisitorIdFromJSON,\n    VisitorIdFromJSONTyped,\n    VisitorIdToJSON,\n} from './';\n\n/**\n * Delivery response. Returned content will be based upon the request and client\\'s active activities.\n * @export\n * @interface DeliveryResponse\n */\nexport interface DeliveryResponse {\n    /**\n     * \n     * @type {number}\n     * @memberof DeliveryResponse\n     */\n    status?: number;\n    /**\n     * ID of the processed request. If it\\'s not sent in the request, a random ID (UUID) is generated and returned with the response. \n     * @type {string}\n     * @memberof DeliveryResponse\n     */\n    requestId?: string;\n    /**\n     * \n     * @type {VisitorId}\n     * @memberof DeliveryResponse\n     */\n    id?: VisitorId;\n    /**\n     * Client\\'s code. The one which was sent in the request\\'s path.\n     * @type {string}\n     * @memberof DeliveryResponse\n     */\n    client?: string;\n    /**\n     * Cluster host name that served the response. Ideally, all subsequent requests should be made to that host.\n     * @type {string}\n     * @memberof DeliveryResponse\n     */\n    edgeHost?: string;\n    /**\n     * \n     * @type {ExecuteResponse}\n     * @memberof DeliveryResponse\n     */\n    execute?: ExecuteResponse;\n    /**\n     * \n     * @type {PrefetchResponse}\n     * @memberof DeliveryResponse\n     */\n    prefetch?: PrefetchResponse;\n}\n\nexport function DeliveryResponseFromJSON(json: any): DeliveryResponse {\n    return DeliveryResponseFromJSONTyped(json, false);\n}\n\nexport function DeliveryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeliveryResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'status': !exists(json, 'status') ? undefined : json['status'],\n        'requestId': !exists(json, 'requestId') ? undefined : json['requestId'],\n        'id': !exists(json, 'id') ? undefined : VisitorIdFromJSON(json['id']),\n        'client': !exists(json, 'client') ? undefined : json['client'],\n        'edgeHost': !exists(json, 'edgeHost') ? undefined : json['edgeHost'],\n        'execute': !exists(json, 'execute') ? undefined : ExecuteResponseFromJSON(json['execute']),\n        'prefetch': !exists(json, 'prefetch') ? undefined : PrefetchResponseFromJSON(json['prefetch']),\n    };\n}\n\nexport function DeliveryResponseToJSON(value?: DeliveryResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'status': value.status,\n        'requestId': value.requestId,\n        'id': VisitorIdToJSON(value.id),\n        'client': value.client,\n        'edgeHost': value.edgeHost,\n        'execute': ExecuteResponseToJSON(value.execute),\n        'prefetch': PrefetchResponseToJSON(value.prefetch),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MboxRequest,\n    MboxRequestFromJSON,\n    MboxRequestFromJSONTyped,\n    MboxRequestToJSON,\n    RequestDetails,\n    RequestDetailsFromJSON,\n    RequestDetailsFromJSONTyped,\n    RequestDetailsToJSON,\n} from './';\n\n/**\n * The execute part of the request that will be evaluated on the server side immediately. Impressions will be incremented for the matching activities. \n * @export\n * @interface ExecuteRequest\n */\nexport interface ExecuteRequest {\n    /**\n     * \n     * @type {RequestDetails}\n     * @memberof ExecuteRequest\n     */\n    pageLoad?: RequestDetails;\n    /**\n     * An array of mboxes\n     * @type {Array<MboxRequest>}\n     * @memberof ExecuteRequest\n     */\n    mboxes?: Array<MboxRequest>;\n}\n\nexport function ExecuteRequestFromJSON(json: any): ExecuteRequest {\n    return ExecuteRequestFromJSONTyped(json, false);\n}\n\nexport function ExecuteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExecuteRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'pageLoad': !exists(json, 'pageLoad') ? undefined : RequestDetailsFromJSON(json['pageLoad']),\n        'mboxes': !exists(json, 'mboxes') ? undefined : ((json['mboxes'] as Array<any>).map(MboxRequestFromJSON)),\n    };\n}\n\nexport function ExecuteRequestToJSON(value?: ExecuteRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'pageLoad': RequestDetailsToJSON(value.pageLoad),\n        'mboxes': value.mboxes === undefined ? undefined : ((value.mboxes as Array<any>).map(MboxRequestToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MboxResponse,\n    MboxResponseFromJSON,\n    MboxResponseFromJSONTyped,\n    MboxResponseToJSON,\n    PageLoadResponse,\n    PageLoadResponseFromJSON,\n    PageLoadResponseFromJSONTyped,\n    PageLoadResponseToJSON,\n} from './';\n\n/**\n * The object that contains responses from execute `pageLoad` and/or execute regional `mboxes` request.\n * @export\n * @interface ExecuteResponse\n */\nexport interface ExecuteResponse {\n    /**\n     * \n     * @type {PageLoadResponse}\n     * @memberof ExecuteResponse\n     */\n    pageLoad?: PageLoadResponse;\n    /**\n     * The list of responses for requested regional mboxes.\n     * @type {Array<MboxResponse>}\n     * @memberof ExecuteResponse\n     */\n    mboxes?: Array<MboxResponse>;\n}\n\nexport function ExecuteResponseFromJSON(json: any): ExecuteResponse {\n    return ExecuteResponseFromJSONTyped(json, false);\n}\n\nexport function ExecuteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExecuteResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'pageLoad': !exists(json, 'pageLoad') ? undefined : PageLoadResponseFromJSON(json['pageLoad']),\n        'mboxes': !exists(json, 'mboxes') ? undefined : ((json['mboxes'] as Array<any>).map(MboxResponseFromJSON)),\n    };\n}\n\nexport function ExecuteResponseToJSON(value?: ExecuteResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'pageLoad': PageLoadResponseToJSON(value.pageLoad),\n        'mboxes': value.mboxes === undefined ? undefined : ((value.mboxes as Array<any>).map(MboxResponseToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AnalyticsRequest,\n    AnalyticsRequestFromJSON,\n    AnalyticsRequestFromJSONTyped,\n    AnalyticsRequestToJSON,\n    AudienceManager,\n    AudienceManagerFromJSON,\n    AudienceManagerFromJSONTyped,\n    AudienceManagerToJSON,\n} from './';\n\n/**\n * Integrations with Audience Manager and Analytics\n * @export\n * @interface ExperienceCloud\n */\nexport interface ExperienceCloud {\n    /**\n     * \n     * @type {AudienceManager}\n     * @memberof ExperienceCloud\n     */\n    audienceManager?: AudienceManager;\n    /**\n     * \n     * @type {AnalyticsRequest}\n     * @memberof ExperienceCloud\n     */\n    analytics?: AnalyticsRequest;\n}\n\nexport function ExperienceCloudFromJSON(json: any): ExperienceCloud {\n    return ExperienceCloudFromJSONTyped(json, false);\n}\n\nexport function ExperienceCloudFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperienceCloud {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'audienceManager': !exists(json, 'audienceManager') ? undefined : AudienceManagerFromJSON(json['audienceManager']),\n        'analytics': !exists(json, 'analytics') ? undefined : AnalyticsRequestFromJSON(json['analytics']),\n    };\n}\n\nexport function ExperienceCloudToJSON(value?: ExperienceCloud | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'audienceManager': AudienceManagerToJSON(value.audienceManager),\n        'analytics': AnalyticsRequestToJSON(value.analytics),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Geo data. If not specified, and Geo is enabled for the client, it will be resolved via user\\'s IP. \n * @export\n * @interface Geo\n */\nexport interface Geo {\n    /**\n     * latitude\n     * @type {number}\n     * @memberof Geo\n     */\n    latitude?: number;\n    /**\n     * longitude\n     * @type {number}\n     * @memberof Geo\n     */\n    longitude?: number;\n}\n\nexport function GeoFromJSON(json: any): Geo {\n    return GeoFromJSONTyped(json, false);\n}\n\nexport function GeoFromJSONTyped(json: any, ignoreDiscriminator: boolean): Geo {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],\n        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],\n    };\n}\n\nexport function GeoToJSON(value?: Geo | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'latitude': value.latitude,\n        'longitude': value.longitude,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Address,\n    AddressFromJSON,\n    AddressFromJSONTyped,\n    AddressToJSON,\n    MboxRequestAllOf,\n    MboxRequestAllOfFromJSON,\n    MboxRequestAllOfFromJSONTyped,\n    MboxRequestAllOfToJSON,\n    Order,\n    OrderFromJSON,\n    OrderFromJSONTyped,\n    OrderToJSON,\n    Product,\n    ProductFromJSON,\n    ProductFromJSONTyped,\n    ProductToJSON,\n    RequestDetails,\n    RequestDetailsFromJSON,\n    RequestDetailsFromJSONTyped,\n    RequestDetailsToJSON,\n} from './';\n\n/**\n * Regional mbox request.\n * @export\n * @interface MboxRequest\n */\nexport interface MboxRequest {\n    /**\n     * \n     * @type {Address}\n     * @memberof MboxRequest\n     */\n    address?: Address;\n    /**\n     * Parameters map. Same object is reused for mbox or profile parameters with slight validation differences. Following names are not allowed for mbox parameters: \\'orderId\\', \\'orderTotal\\', productPurchasedIds\\' Validation (for both mbox and profile parameters):   * Max 50 parameters limit.   * Parameter name should not be blank.   * Parameter name max length 128.   * Parameter name should not start with \\'profile.\\'   * Parameter value length max 5000. \n     * @type {{ [key: string]: string; }}\n     * @memberof MboxRequest\n     */\n    parameters?: { [key: string]: string; };\n    /**\n     * Parameters map. Same object is reused for mbox or profile parameters with slight validation differences. Following names are not allowed for mbox parameters: \\'orderId\\', \\'orderTotal\\', productPurchasedIds\\' Validation (for both mbox and profile parameters):   * Max 50 parameters limit.   * Parameter name should not be blank.   * Parameter name max length 128.   * Parameter name should not start with \\'profile.\\'   * Parameter value length max 5000. \n     * @type {{ [key: string]: string; }}\n     * @memberof MboxRequest\n     */\n    profileParameters?: { [key: string]: string; };\n    /**\n     * \n     * @type {Order}\n     * @memberof MboxRequest\n     */\n    order?: Order;\n    /**\n     * \n     * @type {Product}\n     * @memberof MboxRequest\n     */\n    product?: Product;\n    /**\n     * An index for the mboxes to be executed or prefetched. Mbox index is used for correlation between the mbox request with the mbox response, for either prefetch or execute responses. Index should be unique in the mbox list. \n     * @type {number}\n     * @memberof MboxRequest\n     */\n    index?: number;\n    /**\n     * The name of the regional mbox to be evaluated. \n     * @type {string}\n     * @memberof MboxRequest\n     */\n    name?: string;\n}\n\nexport function MboxRequestFromJSON(json: any): MboxRequest {\n    return MboxRequestFromJSONTyped(json, false);\n}\n\nexport function MboxRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): MboxRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),\n        'parameters': !exists(json, 'parameters') ? undefined : json['parameters'],\n        'profileParameters': !exists(json, 'profileParameters') ? undefined : json['profileParameters'],\n        'order': !exists(json, 'order') ? undefined : OrderFromJSON(json['order']),\n        'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product']),\n        'index': !exists(json, 'index') ? undefined : json['index'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n    };\n}\n\nexport function MboxRequestToJSON(value?: MboxRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': AddressToJSON(value.address),\n        'parameters': value.parameters,\n        'profileParameters': value.profileParameters,\n        'order': OrderToJSON(value.order),\n        'product': ProductToJSON(value.product),\n        'index': value.index,\n        'name': value.name,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface MboxRequestAllOf\n */\nexport interface MboxRequestAllOf {\n    /**\n     * An index for the mboxes to be executed or prefetched. Mbox index is used for correlation between the mbox request with the mbox response, for either prefetch or execute responses. Index should be unique in the mbox list. \n     * @type {number}\n     * @memberof MboxRequestAllOf\n     */\n    index?: number;\n    /**\n     * The name of the regional mbox to be evaluated. \n     * @type {string}\n     * @memberof MboxRequestAllOf\n     */\n    name?: string;\n}\n\nexport function MboxRequestAllOfFromJSON(json: any): MboxRequestAllOf {\n    return MboxRequestAllOfFromJSONTyped(json, false);\n}\n\nexport function MboxRequestAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): MboxRequestAllOf {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'index': !exists(json, 'index') ? undefined : json['index'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n    };\n}\n\nexport function MboxRequestAllOfToJSON(value?: MboxRequestAllOf | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'index': value.index,\n        'name': value.name,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AnalyticsResponse,\n    AnalyticsResponseFromJSON,\n    AnalyticsResponseFromJSONTyped,\n    AnalyticsResponseToJSON,\n    Metric,\n    MetricFromJSON,\n    MetricFromJSONTyped,\n    MetricToJSON,\n    Option,\n    OptionFromJSON,\n    OptionFromJSONTyped,\n    OptionToJSON,\n} from './';\n\n/**\n * Mbox response object. \n * @export\n * @interface MboxResponse\n */\nexport interface MboxResponse {\n    /**\n     * Indicates that the response is for mbox with the same index, as was specified in the prefetch or execute request. \n     * @type {number}\n     * @memberof MboxResponse\n     */\n    index?: number;\n    /**\n     * The name of the mbox. Since the same mbox name can be specified multiple times in the request it should be used in conjunction with the index. \n     * @type {string}\n     * @memberof MboxResponse\n     */\n    name?: string;\n    /**\n     * The option that was matched for the current mbox. Cannot be an offer with templates or a visual offer. \n     * @type {Array<Option>}\n     * @memberof MboxResponse\n     */\n    options?: Array<Option>;\n    /**\n     * Click metrics.\n     * @type {Array<Metric>}\n     * @memberof MboxResponse\n     */\n    metrics?: Array<Metric>;\n    /**\n     * \n     * @type {AnalyticsResponse}\n     * @memberof MboxResponse\n     */\n    analytics?: AnalyticsResponse;\n    /**\n     * The object containing all trace data for the request, only present if the trace token was provided in the request. \n     * @type {{ [key: string]: object; }}\n     * @memberof MboxResponse\n     */\n    trace?: { [key: string]: object; };\n}\n\nexport function MboxResponseFromJSON(json: any): MboxResponse {\n    return MboxResponseFromJSONTyped(json, false);\n}\n\nexport function MboxResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MboxResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'index': !exists(json, 'index') ? undefined : json['index'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(OptionFromJSON)),\n        'metrics': !exists(json, 'metrics') ? undefined : ((json['metrics'] as Array<any>).map(MetricFromJSON)),\n        'analytics': !exists(json, 'analytics') ? undefined : AnalyticsResponseFromJSON(json['analytics']),\n        'trace': !exists(json, 'trace') ? undefined : json['trace'],\n    };\n}\n\nexport function MboxResponseToJSON(value?: MboxResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'index': value.index,\n        'name': value.name,\n        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(OptionToJSON)),\n        'metrics': value.metrics === undefined ? undefined : ((value.metrics as Array<any>).map(MetricToJSON)),\n        'analytics': AnalyticsResponseToJSON(value.analytics),\n        'trace': value.trace,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MetricType,\n    MetricTypeFromJSON,\n    MetricTypeFromJSONTyped,\n    MetricTypeToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface Metric\n */\nexport interface Metric {\n    /**\n     * \n     * @type {MetricType}\n     * @memberof Metric\n     */\n    type?: MetricType;\n    /**\n     * The selector\n     * @type {string}\n     * @memberof Metric\n     */\n    selector?: string;\n    /**\n     * The event token that should be sent with the notifications in case the click occurred.\n     * @type {string}\n     * @memberof Metric\n     */\n    eventToken?: string;\n}\n\nexport function MetricFromJSON(json: any): Metric {\n    return MetricFromJSONTyped(json, false);\n}\n\nexport function MetricFromJSONTyped(json: any, ignoreDiscriminator: boolean): Metric {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'type': !exists(json, 'type') ? undefined : MetricTypeFromJSON(json['type']),\n        'selector': !exists(json, 'selector') ? undefined : json['selector'],\n        'eventToken': !exists(json, 'eventToken') ? undefined : json['eventToken'],\n    };\n}\n\nexport function MetricToJSON(value?: Metric | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'type': MetricTypeToJSON(value.type),\n        'selector': value.selector,\n        'eventToken': value.eventToken,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    DeviceType,\n    DeviceTypeFromJSON,\n    DeviceTypeFromJSONTyped,\n    DeviceTypeToJSON,\n    MobilePlatformType,\n    MobilePlatformTypeFromJSON,\n    MobilePlatformTypeFromJSONTyped,\n    MobilePlatformTypeToJSON,\n} from './';\n\n/**\n * Mobile Platform should be specified when the channel is Mobile\n * @export\n * @interface MobilePlatform\n */\nexport interface MobilePlatform {\n    /**\n     * Optional field, added to help with device detection using device atlas. This is equivalent of a.DeviceName field passed in from Mobile SDK \n     * @type {string}\n     * @memberof MobilePlatform\n     */\n    deviceName?: string;\n    /**\n     * \n     * @type {DeviceType}\n     * @memberof MobilePlatform\n     */\n    deviceType: DeviceType;\n    /**\n     * \n     * @type {MobilePlatformType}\n     * @memberof MobilePlatform\n     */\n    platformType: MobilePlatformType;\n    /**\n     * If not specified - all activities with any platformVersion will be evaluated. If specified - only activities with the same platformVersion will be evaluated. \n     * @type {string}\n     * @memberof MobilePlatform\n     */\n    version?: string;\n}\n\nexport function MobilePlatformFromJSON(json: any): MobilePlatform {\n    return MobilePlatformFromJSONTyped(json, false);\n}\n\nexport function MobilePlatformFromJSONTyped(json: any, ignoreDiscriminator: boolean): MobilePlatform {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'deviceName': !exists(json, 'deviceName') ? undefined : json['deviceName'],\n        'deviceType': DeviceTypeFromJSON(json['deviceType']),\n        'platformType': MobilePlatformTypeFromJSON(json['platformType']),\n        'version': !exists(json, 'version') ? undefined : json['version'],\n    };\n}\n\nexport function MobilePlatformToJSON(value?: MobilePlatform | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'deviceName': value.deviceName,\n        'deviceType': DeviceTypeToJSON(value.deviceType),\n        'platformType': MobilePlatformTypeToJSON(value.platformType),\n        'version': value.version,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Address,\n    AddressFromJSON,\n    AddressFromJSONTyped,\n    AddressToJSON,\n    MetricType,\n    MetricTypeFromJSON,\n    MetricTypeFromJSONTyped,\n    MetricTypeToJSON,\n    NotificationAllOf,\n    NotificationAllOfFromJSON,\n    NotificationAllOfFromJSONTyped,\n    NotificationAllOfToJSON,\n    NotificationMbox,\n    NotificationMboxFromJSON,\n    NotificationMboxFromJSONTyped,\n    NotificationMboxToJSON,\n    NotificationPageLoad,\n    NotificationPageLoadFromJSON,\n    NotificationPageLoadFromJSONTyped,\n    NotificationPageLoadToJSON,\n    NotificationView,\n    NotificationViewFromJSON,\n    NotificationViewFromJSONTyped,\n    NotificationViewToJSON,\n    Order,\n    OrderFromJSON,\n    OrderFromJSONTyped,\n    OrderToJSON,\n    Product,\n    ProductFromJSON,\n    ProductFromJSONTyped,\n    ProductToJSON,\n    RequestDetails,\n    RequestDetailsFromJSON,\n    RequestDetailsFromJSONTyped,\n    RequestDetailsToJSON,\n} from './';\n\n/**\n * Notification object is used to sent notificaitons regarding what prefetched content was displayed (for views, pageLoad or regional mboxes), which views, pages and mboxes were visited (triggered), and which elements were clicked. Notification request detail will be validated and in case there are validation errors with any token or timestamp the entire request will be invalidated, so there are no cases of inconsistent data, caused by a partially processed notification. that may happen with a partially processed notification. This is different from the approach in the batch mbox v2 API. Mboxes and views are mutually exclusive. \n * @export\n * @interface Notification\n */\nexport interface Notification {\n    /**\n     * \n     * @type {Address}\n     * @memberof Notification\n     */\n    address?: Address;\n    /**\n     * Parameters map. Same object is reused for mbox or profile parameters with slight validation differences. Following names are not allowed for mbox parameters: \\'orderId\\', \\'orderTotal\\', productPurchasedIds\\' Validation (for both mbox and profile parameters):   * Max 50 parameters limit.   * Parameter name should not be blank.   * Parameter name max length 128.   * Parameter name should not start with \\'profile.\\'   * Parameter value length max 5000. \n     * @type {{ [key: string]: string; }}\n     * @memberof Notification\n     */\n    parameters?: { [key: string]: string; };\n    /**\n     * Parameters map. Same object is reused for mbox or profile parameters with slight validation differences. Following names are not allowed for mbox parameters: \\'orderId\\', \\'orderTotal\\', productPurchasedIds\\' Validation (for both mbox and profile parameters):   * Max 50 parameters limit.   * Parameter name should not be blank.   * Parameter name max length 128.   * Parameter name should not start with \\'profile.\\'   * Parameter value length max 5000. \n     * @type {{ [key: string]: string; }}\n     * @memberof Notification\n     */\n    profileParameters?: { [key: string]: string; };\n    /**\n     * \n     * @type {Order}\n     * @memberof Notification\n     */\n    order?: Order;\n    /**\n     * \n     * @type {Product}\n     * @memberof Notification\n     */\n    product?: Product;\n    /**\n     * Notification id will be returned in response and will indicate that the notification was processed successfully. \n     * @type {string}\n     * @memberof Notification\n     */\n    id?: string;\n    /**\n     * Impression id is used to stitch (link) the current notification with a previous notification or execute request. In case they both of them match, the second and other subsequent requests will not generate a new impression to the activity, experience etc. \n     * @type {string}\n     * @memberof Notification\n     */\n    impressionId?: string;\n    /**\n     * \n     * @type {MetricType}\n     * @memberof Notification\n     */\n    type?: MetricType;\n    /**\n     * Timestamp of the notification, in milliseconds elapsed since UNIX epoch.\n     * @type {number}\n     * @memberof Notification\n     */\n    timestamp?: number;\n    /**\n     * A list of tokens for displayed content or clicked selectors, based on the type of notification.\n     * @type {Array<string>}\n     * @memberof Notification\n     */\n    tokens?: Array<string>;\n    /**\n     * \n     * @type {NotificationMbox}\n     * @memberof Notification\n     */\n    mbox?: NotificationMbox;\n    /**\n     * \n     * @type {NotificationView}\n     * @memberof Notification\n     */\n    view?: NotificationView;\n    /**\n     * \n     * @type {NotificationPageLoad}\n     * @memberof Notification\n     */\n    pageLoad?: NotificationPageLoad;\n}\n\nexport function NotificationFromJSON(json: any): Notification {\n    return NotificationFromJSONTyped(json, false);\n}\n\nexport function NotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Notification {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),\n        'parameters': !exists(json, 'parameters') ? undefined : json['parameters'],\n        'profileParameters': !exists(json, 'profileParameters') ? undefined : json['profileParameters'],\n        'order': !exists(json, 'order') ? undefined : OrderFromJSON(json['order']),\n        'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product']),\n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'impressionId': !exists(json, 'impressionId') ? undefined : json['impressionId'],\n        'type': !exists(json, 'type') ? undefined : MetricTypeFromJSON(json['type']),\n        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],\n        'tokens': !exists(json, 'tokens') ? undefined : json['tokens'],\n        'mbox': !exists(json, 'mbox') ? undefined : NotificationMboxFromJSON(json['mbox']),\n        'view': !exists(json, 'view') ? undefined : NotificationViewFromJSON(json['view']),\n        'pageLoad': !exists(json, 'pageLoad') ? undefined : NotificationPageLoadFromJSON(json['pageLoad']),\n    };\n}\n\nexport function NotificationToJSON(value?: Notification | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': AddressToJSON(value.address),\n        'parameters': value.parameters,\n        'profileParameters': value.profileParameters,\n        'order': OrderToJSON(value.order),\n        'product': ProductToJSON(value.product),\n        'id': value.id,\n        'impressionId': value.impressionId,\n        'type': MetricTypeToJSON(value.type),\n        'timestamp': value.timestamp,\n        'tokens': value.tokens,\n        'mbox': NotificationMboxToJSON(value.mbox),\n        'view': NotificationViewToJSON(value.view),\n        'pageLoad': NotificationPageLoadToJSON(value.pageLoad),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MetricType,\n    MetricTypeFromJSON,\n    MetricTypeFromJSONTyped,\n    MetricTypeToJSON,\n    NotificationMbox,\n    NotificationMboxFromJSON,\n    NotificationMboxFromJSONTyped,\n    NotificationMboxToJSON,\n    NotificationPageLoad,\n    NotificationPageLoadFromJSON,\n    NotificationPageLoadFromJSONTyped,\n    NotificationPageLoadToJSON,\n    NotificationView,\n    NotificationViewFromJSON,\n    NotificationViewFromJSONTyped,\n    NotificationViewToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface NotificationAllOf\n */\nexport interface NotificationAllOf {\n    /**\n     * Notification id will be returned in response and will indicate that the notification was processed successfully. \n     * @type {string}\n     * @memberof NotificationAllOf\n     */\n    id?: string;\n    /**\n     * Impression id is used to stitch (link) the current notification with a previous notification or execute request. In case they both of them match, the second and other subsequent requests will not generate a new impression to the activity, experience etc. \n     * @type {string}\n     * @memberof NotificationAllOf\n     */\n    impressionId?: string;\n    /**\n     * \n     * @type {MetricType}\n     * @memberof NotificationAllOf\n     */\n    type?: MetricType;\n    /**\n     * Timestamp of the notification, in milliseconds elapsed since UNIX epoch.\n     * @type {number}\n     * @memberof NotificationAllOf\n     */\n    timestamp?: number;\n    /**\n     * A list of tokens for displayed content or clicked selectors, based on the type of notification.\n     * @type {Array<string>}\n     * @memberof NotificationAllOf\n     */\n    tokens?: Array<string>;\n    /**\n     * \n     * @type {NotificationMbox}\n     * @memberof NotificationAllOf\n     */\n    mbox?: NotificationMbox;\n    /**\n     * \n     * @type {NotificationView}\n     * @memberof NotificationAllOf\n     */\n    view?: NotificationView;\n    /**\n     * \n     * @type {NotificationPageLoad}\n     * @memberof NotificationAllOf\n     */\n    pageLoad?: NotificationPageLoad;\n}\n\nexport function NotificationAllOfFromJSON(json: any): NotificationAllOf {\n    return NotificationAllOfFromJSONTyped(json, false);\n}\n\nexport function NotificationAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationAllOf {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'impressionId': !exists(json, 'impressionId') ? undefined : json['impressionId'],\n        'type': !exists(json, 'type') ? undefined : MetricTypeFromJSON(json['type']),\n        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],\n        'tokens': !exists(json, 'tokens') ? undefined : json['tokens'],\n        'mbox': !exists(json, 'mbox') ? undefined : NotificationMboxFromJSON(json['mbox']),\n        'view': !exists(json, 'view') ? undefined : NotificationViewFromJSON(json['view']),\n        'pageLoad': !exists(json, 'pageLoad') ? undefined : NotificationPageLoadFromJSON(json['pageLoad']),\n    };\n}\n\nexport function NotificationAllOfToJSON(value?: NotificationAllOf | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'impressionId': value.impressionId,\n        'type': MetricTypeToJSON(value.type),\n        'timestamp': value.timestamp,\n        'tokens': value.tokens,\n        'mbox': NotificationMboxToJSON(value.mbox),\n        'view': NotificationViewToJSON(value.view),\n        'pageLoad': NotificationPageLoadToJSON(value.pageLoad),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface NotificationMbox\n */\nexport interface NotificationMbox {\n    /**\n     * Mbox name. Validation   * No blank values allowed.   * A \\'-clicked\\' suffix or the following names are not allowed for mbox names: ** display mboxes **, ** any mbox **, ** click from display mbox **   * Allowed chars: - \\'-, ./=`:;&!@#$%^&*()+|?~[]{}\\' \n     * @type {string}\n     * @memberof NotificationMbox\n     */\n    name?: string;\n    /**\n     * Mbox state token\n     * @type {string}\n     * @memberof NotificationMbox\n     */\n    state?: string;\n}\n\nexport function NotificationMboxFromJSON(json: any): NotificationMbox {\n    return NotificationMboxFromJSONTyped(json, false);\n}\n\nexport function NotificationMboxFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationMbox {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'state': !exists(json, 'state') ? undefined : json['state'],\n    };\n}\n\nexport function NotificationMboxToJSON(value?: NotificationMbox | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'state': value.state,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Include this object to send display notifications for the prefetch page load contnet.\n * @export\n * @interface NotificationPageLoad\n */\nexport interface NotificationPageLoad {\n    /**\n     * Page Load state token\n     * @type {string}\n     * @memberof NotificationPageLoad\n     */\n    state?: string;\n}\n\nexport function NotificationPageLoadFromJSON(json: any): NotificationPageLoad {\n    return NotificationPageLoadFromJSONTyped(json, false);\n}\n\nexport function NotificationPageLoadFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationPageLoad {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'state': !exists(json, 'state') ? undefined : json['state'],\n    };\n}\n\nexport function NotificationPageLoadToJSON(value?: NotificationPageLoad | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'state': value.state,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Notification for the displayed view.\n * @export\n * @interface NotificationView\n */\nexport interface NotificationView {\n    /**\n     * View Name - Unique view name. If the activity has a metric with a view with this name it will be matched, providing the Key matches as well or is null and view and metric targeting is matched. \n     * @type {string}\n     * @memberof NotificationView\n     */\n    name?: string;\n    /**\n     * View Key - An optional encoded String identifier used in advanced scenarios, such as View fingerprinting. Same matching conditions as for View Name. \n     * @type {string}\n     * @memberof NotificationView\n     */\n    key?: string;\n    /**\n     * View state token.\n     * @type {string}\n     * @memberof NotificationView\n     */\n    state?: string;\n}\n\nexport function NotificationViewFromJSON(json: any): NotificationView {\n    return NotificationViewFromJSONTyped(json, false);\n}\n\nexport function NotificationViewFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotificationView {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'key': !exists(json, 'key') ? undefined : json['key'],\n        'state': !exists(json, 'state') ? undefined : json['state'],\n    };\n}\n\nexport function NotificationViewToJSON(value?: NotificationView | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'key': value.key,\n        'state': value.state,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    OneOfstringobjectarray,\n    OneOfstringobjectarrayFromJSON,\n    OneOfstringobjectarrayFromJSONTyped,\n    OneOfstringobjectarrayToJSON,\n    OptionType,\n    OptionTypeFromJSON,\n    OptionTypeFromJSONTyped,\n    OptionTypeToJSON,\n} from './';\n\n/**\n * The content from the activitiesc is returned via the option objects.\n * @export\n * @interface Option\n */\nexport interface Option {\n    /**\n     * \n     * @type {OptionType}\n     * @memberof Option\n     */\n    type?: OptionType;\n    /**\n     * Content that should be applied/displayed/replaced etc, based on the option type. Content can be one of:   * html   * redirect link   * link for a dynamic offer   * raw json   * one or more actions (json - from offers with templates and visual offers) Actions format is specific for delivery API. \n     * @type {OneOfstringobjectarray}\n     * @memberof Option\n     */\n    content?: OneOfstringobjectarray;\n    /**\n     * Will be present only in response of a prefetch request. After the content is displayed the event token should be sent via notifications to the edge server so that visit/visitor/impression events could be logged. \n     * @type {string}\n     * @memberof Option\n     */\n    eventToken?: string;\n    /**\n     * List of the response tokens and their values for the given option. Response tokens can be defined via the /v1/responsetokens API. The values for the tokens are computed for every option returned by a activity and represented as a dictionary:   * Key - the response token name.   * Value - the response token value. The value is usually a string, but it can be a list of string in case of   \\'category affinity\\' response token. \n     * @type {{ [key: string]: object; }}\n     * @memberof Option\n     */\n    responseTokens?: { [key: string]: object; };\n}\n\nexport function OptionFromJSON(json: any): Option {\n    return OptionFromJSONTyped(json, false);\n}\n\nexport function OptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Option {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'type': !exists(json, 'type') ? undefined : OptionTypeFromJSON(json['type']),\n        'content': !exists(json, 'content') ? undefined : OneOfstringobjectarrayFromJSON(json['content']),\n        'eventToken': !exists(json, 'eventToken') ? undefined : json['eventToken'],\n        'responseTokens': !exists(json, 'responseTokens') ? undefined : json['responseTokens'],\n    };\n}\n\nexport function OptionToJSON(value?: Option | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'type': OptionTypeToJSON(value.type),\n        'content': OneOfstringobjectarrayToJSON(value.content),\n        'eventToken': value.eventToken,\n        'responseTokens': value.responseTokens,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    DateTime,\n    DateTimeFromJSON,\n    DateTimeFromJSONTyped,\n    DateTimeToJSON,\n} from './';\n\n/**\n * Object that describes the order details.\n * @export\n * @interface Order\n */\nexport interface Order {\n    /**\n     * Order Id.\n     * @type {string}\n     * @memberof Order\n     */\n    id?: string;\n    /**\n     * Order Total. The amount of money in the current order. \n     * @type {number}\n     * @memberof Order\n     */\n    total?: number;\n    /**\n     * Order\\'s product ids. Validation   * No blank values allowed.   * Each product Id max length 50.   * Product ids, separated by commas and concatenated, total length should not exceed 250. \n     * @type {Array<string>}\n     * @memberof Order\n     */\n    purchasedProductIds?: Array<string>;\n    /**\n     * Time in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format \n     * @type {Date}\n     * @memberof Order\n     */\n    time?: Date;\n    /**\n     * Id used to track the experience across POST/PUT requests\n     * @type {number}\n     * @memberof Order\n     */\n    experienceLocalId?: number;\n    /**\n     * Whether or not the order is a duplicate\n     * @type {boolean}\n     * @memberof Order\n     */\n    duplicate?: boolean;\n    /**\n     * Whether or not the order is abnormally different from the rest in volume\n     * @type {boolean}\n     * @memberof Order\n     */\n    outlier?: boolean;\n}\n\nexport function OrderFromJSON(json: any): Order {\n    return OrderFromJSONTyped(json, false);\n}\n\nexport function OrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Order {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'total': !exists(json, 'total') ? undefined : json['total'],\n        'purchasedProductIds': !exists(json, 'purchasedProductIds') ? undefined : json['purchasedProductIds'],\n        'time': !exists(json, 'time') ? undefined : DateTimeFromJSON(json['time']),\n        'experienceLocalId': !exists(json, 'experienceLocalId') ? undefined : json['experienceLocalId'],\n        'duplicate': !exists(json, 'duplicate') ? undefined : json['duplicate'],\n        'outlier': !exists(json, 'outlier') ? undefined : json['outlier'],\n    };\n}\n\nexport function OrderToJSON(value?: Order | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'total': value.total,\n        'purchasedProductIds': value.purchasedProductIds,\n        'time': DateTimeToJSON(value.time),\n        'experienceLocalId': value.experienceLocalId,\n        'duplicate': value.duplicate,\n        'outlier': value.outlier,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AnalyticsResponse,\n    AnalyticsResponseFromJSON,\n    AnalyticsResponseFromJSONTyped,\n    AnalyticsResponseToJSON,\n    Metric,\n    MetricFromJSON,\n    MetricFromJSONTyped,\n    MetricToJSON,\n    Option,\n    OptionFromJSON,\n    OptionFromJSONTyped,\n    OptionToJSON,\n} from './';\n\n/**\n * Page load response. Contains the result of prefetching or executing a request that will retrieve content for all selectors not associated with a particular view. \n * @export\n * @interface PageLoadResponse\n */\nexport interface PageLoadResponse {\n    /**\n     * List of options that should be applied. Note: options that have been set on selectors assigned to views will not be included here. \n     * @type {Array<Option>}\n     * @memberof PageLoadResponse\n     */\n    options?: Array<Option>;\n    /**\n     * Click track metrics. Note that click metrics for selectors set with views will not be included here. In case the same activity is serving content for selectors both assinged to a view and selectors without any views, and having click track metrics that are not assotiated with any view within the activity, then:   * in case of a prefetch only request, these metrics (tokens) will be set in the Prefetch response\\'s metrics.   * in case of an execute only request, the metrics will be set in the page load response\\'s metrics.   * in case of a request, with both, execute and prefetch, metrics will be set in the page load response\\'s     metrics only. \n     * @type {Array<Metric>}\n     * @memberof PageLoadResponse\n     */\n    metrics?: Array<Metric>;\n    /**\n     * \n     * @type {AnalyticsResponse}\n     * @memberof PageLoadResponse\n     */\n    analytics?: AnalyticsResponse;\n    /**\n     * View state token that must be sent back with display notification for the view. May only be present for prefetch requests. \n     * @type {string}\n     * @memberof PageLoadResponse\n     */\n    state?: string;\n    /**\n     * The object containing all trace data for the request, only present if the trace token was provided in the request. \n     * @type {{ [key: string]: object; }}\n     * @memberof PageLoadResponse\n     */\n    trace?: { [key: string]: object; };\n}\n\nexport function PageLoadResponseFromJSON(json: any): PageLoadResponse {\n    return PageLoadResponseFromJSONTyped(json, false);\n}\n\nexport function PageLoadResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PageLoadResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(OptionFromJSON)),\n        'metrics': !exists(json, 'metrics') ? undefined : ((json['metrics'] as Array<any>).map(MetricFromJSON)),\n        'analytics': !exists(json, 'analytics') ? undefined : AnalyticsResponseFromJSON(json['analytics']),\n        'state': !exists(json, 'state') ? undefined : json['state'],\n        'trace': !exists(json, 'trace') ? undefined : json['trace'],\n    };\n}\n\nexport function PageLoadResponseToJSON(value?: PageLoadResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(OptionToJSON)),\n        'metrics': value.metrics === undefined ? undefined : ((value.metrics as Array<any>).map(MetricToJSON)),\n        'analytics': AnalyticsResponseToJSON(value.analytics),\n        'state': value.state,\n        'trace': value.trace,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AnalyticsResponse,\n    AnalyticsResponseFromJSON,\n    AnalyticsResponseFromJSONTyped,\n    AnalyticsResponseToJSON,\n    MboxResponse,\n    MboxResponseFromJSON,\n    MboxResponseFromJSONTyped,\n    MboxResponseToJSON,\n    Metric,\n    MetricFromJSON,\n    MetricFromJSONTyped,\n    MetricToJSON,\n    Option,\n    OptionFromJSON,\n    OptionFromJSONTyped,\n    OptionToJSON,\n    PrefetchMboxResponseAllOf,\n    PrefetchMboxResponseAllOfFromJSON,\n    PrefetchMboxResponseAllOfFromJSONTyped,\n    PrefetchMboxResponseAllOfToJSON,\n} from './';\n\n/**\n * \n * @export\n * @interface PrefetchMboxResponse\n */\nexport interface PrefetchMboxResponse {\n    /**\n     * Indicates that the response is for mbox with the same index, as was specified in the prefetch or execute request. \n     * @type {number}\n     * @memberof PrefetchMboxResponse\n     */\n    index?: number;\n    /**\n     * The name of the mbox. Since the same mbox name can be specified multiple times in the request it should be used in conjunction with the index. \n     * @type {string}\n     * @memberof PrefetchMboxResponse\n     */\n    name?: string;\n    /**\n     * The option that was matched for the current mbox. Cannot be an offer with templates or a visual offer. \n     * @type {Array<Option>}\n     * @memberof PrefetchMboxResponse\n     */\n    options?: Array<Option>;\n    /**\n     * Click metrics.\n     * @type {Array<Metric>}\n     * @memberof PrefetchMboxResponse\n     */\n    metrics?: Array<Metric>;\n    /**\n     * \n     * @type {AnalyticsResponse}\n     * @memberof PrefetchMboxResponse\n     */\n    analytics?: AnalyticsResponse;\n    /**\n     * The object containing all trace data for the request, only present if the trace token was provided in the request. \n     * @type {{ [key: string]: object; }}\n     * @memberof PrefetchMboxResponse\n     */\n    trace?: { [key: string]: object; };\n    /**\n     * Mbox state token that must be sent back with display notification for the mbox.\n     * @type {string}\n     * @memberof PrefetchMboxResponse\n     */\n    state?: string;\n}\n\nexport function PrefetchMboxResponseFromJSON(json: any): PrefetchMboxResponse {\n    return PrefetchMboxResponseFromJSONTyped(json, false);\n}\n\nexport function PrefetchMboxResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrefetchMboxResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'index': !exists(json, 'index') ? undefined : json['index'],\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(OptionFromJSON)),\n        'metrics': !exists(json, 'metrics') ? undefined : ((json['metrics'] as Array<any>).map(MetricFromJSON)),\n        'analytics': !exists(json, 'analytics') ? undefined : AnalyticsResponseFromJSON(json['analytics']),\n        'trace': !exists(json, 'trace') ? undefined : json['trace'],\n        'state': !exists(json, 'state') ? undefined : json['state'],\n    };\n}\n\nexport function PrefetchMboxResponseToJSON(value?: PrefetchMboxResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'index': value.index,\n        'name': value.name,\n        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(OptionToJSON)),\n        'metrics': value.metrics === undefined ? undefined : ((value.metrics as Array<any>).map(MetricToJSON)),\n        'analytics': AnalyticsResponseToJSON(value.analytics),\n        'trace': value.trace,\n        'state': value.state,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface PrefetchMboxResponseAllOf\n */\nexport interface PrefetchMboxResponseAllOf {\n    /**\n     * Mbox state token that must be sent back with display notification for the mbox.\n     * @type {string}\n     * @memberof PrefetchMboxResponseAllOf\n     */\n    state?: string;\n}\n\nexport function PrefetchMboxResponseAllOfFromJSON(json: any): PrefetchMboxResponseAllOf {\n    return PrefetchMboxResponseAllOfFromJSONTyped(json, false);\n}\n\nexport function PrefetchMboxResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrefetchMboxResponseAllOf {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'state': !exists(json, 'state') ? undefined : json['state'],\n    };\n}\n\nexport function PrefetchMboxResponseAllOfToJSON(value?: PrefetchMboxResponseAllOf | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'state': value.state,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    MboxRequest,\n    MboxRequestFromJSON,\n    MboxRequestFromJSONTyped,\n    MboxRequestToJSON,\n    RequestDetails,\n    RequestDetailsFromJSON,\n    RequestDetailsFromJSONTyped,\n    RequestDetailsToJSON,\n    ViewRequest,\n    ViewRequestFromJSON,\n    ViewRequestFromJSONTyped,\n    ViewRequestToJSON,\n} from './';\n\n/**\n * Use this object to prefetch the content for `views` and/or `pageLoad` and/or `mboxes`.   * `views` - the request to prefetch selectors grouped per view.   * `pageLoad` - the request to prefetch selectors not assigned to any view.   * `mboxes` - the request to prefetch mbox content. \n * @export\n * @interface PrefetchRequest\n */\nexport interface PrefetchRequest {\n    /**\n     * An array of views \n     * @type {Array<ViewRequest>}\n     * @memberof PrefetchRequest\n     */\n    views?: Array<ViewRequest>;\n    /**\n     * \n     * @type {RequestDetails}\n     * @memberof PrefetchRequest\n     */\n    pageLoad?: RequestDetails;\n    /**\n     * Prefetch the content for the regional mbox.\n     * @type {Array<MboxRequest>}\n     * @memberof PrefetchRequest\n     */\n    mboxes?: Array<MboxRequest>;\n}\n\nexport function PrefetchRequestFromJSON(json: any): PrefetchRequest {\n    return PrefetchRequestFromJSONTyped(json, false);\n}\n\nexport function PrefetchRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrefetchRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'views': !exists(json, 'views') ? undefined : ((json['views'] as Array<any>).map(ViewRequestFromJSON)),\n        'pageLoad': !exists(json, 'pageLoad') ? undefined : RequestDetailsFromJSON(json['pageLoad']),\n        'mboxes': !exists(json, 'mboxes') ? undefined : ((json['mboxes'] as Array<any>).map(MboxRequestFromJSON)),\n    };\n}\n\nexport function PrefetchRequestToJSON(value?: PrefetchRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'views': value.views === undefined ? undefined : ((value.views as Array<any>).map(ViewRequestToJSON)),\n        'pageLoad': RequestDetailsToJSON(value.pageLoad),\n        'mboxes': value.mboxes === undefined ? undefined : ((value.mboxes as Array<any>).map(MboxRequestToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Metric,\n    MetricFromJSON,\n    MetricFromJSONTyped,\n    MetricToJSON,\n    PageLoadResponse,\n    PageLoadResponseFromJSON,\n    PageLoadResponseFromJSONTyped,\n    PageLoadResponseToJSON,\n    PrefetchMboxResponse,\n    PrefetchMboxResponseFromJSON,\n    PrefetchMboxResponseFromJSONTyped,\n    PrefetchMboxResponseToJSON,\n    View,\n    ViewFromJSON,\n    ViewFromJSONTyped,\n    ViewToJSON,\n} from './';\n\n/**\n * The object that will return the prefetched content based on the request, active activites etc \n * @export\n * @interface PrefetchResponse\n */\nexport interface PrefetchResponse {\n    /**\n     * Contains all the views matching the request. \n     * @type {Array<View>}\n     * @memberof PrefetchResponse\n     */\n    views?: Array<View>;\n    /**\n     * \n     * @type {PageLoadResponse}\n     * @memberof PrefetchResponse\n     */\n    pageLoad?: PageLoadResponse;\n    /**\n     * Prefetched mboxes, including content and notification tokens to be sent back when the mboxes are displayed. \n     * @type {Array<PrefetchMboxResponse>}\n     * @memberof PrefetchResponse\n     */\n    mboxes?: Array<PrefetchMboxResponse>;\n    /**\n     * The click track metrics that are not assigned to a view but are present in activites that have views, except in case the same activity is serving content for selectors both assinged to a view and selectors without any views, and having click track metrics that are not assotiated with any view within the activity, then:   * in case of a prefetch only request, these metrics (tokens) will be set in the prefetch response\\'s metrics.   * in case of an execute only request, the metrics will be set in the page load response\\'s metrics.   * in case of a request, with both, execute and prefetch, metrics will be set in the page load response\\'s     metrics only. \n     * @type {Array<Metric>}\n     * @memberof PrefetchResponse\n     */\n    metrics?: Array<Metric>;\n}\n\nexport function PrefetchResponseFromJSON(json: any): PrefetchResponse {\n    return PrefetchResponseFromJSONTyped(json, false);\n}\n\nexport function PrefetchResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrefetchResponse {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'views': !exists(json, 'views') ? undefined : ((json['views'] as Array<any>).map(ViewFromJSON)),\n        'pageLoad': !exists(json, 'pageLoad') ? undefined : PageLoadResponseFromJSON(json['pageLoad']),\n        'mboxes': !exists(json, 'mboxes') ? undefined : ((json['mboxes'] as Array<any>).map(PrefetchMboxResponseFromJSON)),\n        'metrics': !exists(json, 'metrics') ? undefined : ((json['metrics'] as Array<any>).map(MetricFromJSON)),\n    };\n}\n\nexport function PrefetchResponseToJSON(value?: PrefetchResponse | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'views': value.views === undefined ? undefined : ((value.views as Array<any>).map(ViewToJSON)),\n        'pageLoad': PageLoadResponseToJSON(value.pageLoad),\n        'mboxes': value.mboxes === undefined ? undefined : ((value.mboxes as Array<any>).map(PrefetchMboxResponseToJSON)),\n        'metrics': value.metrics === undefined ? undefined : ((value.metrics as Array<any>).map(MetricToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The properties of the products\n * @export\n * @interface Product\n */\nexport interface Product {\n    /**\n     * Product id. Should not be blank.\n     * @type {string}\n     * @memberof Product\n     */\n    id?: string;\n    /**\n     * Category id. Should not be blank.\n     * @type {string}\n     * @memberof Product\n     */\n    categoryId?: string;\n}\n\nexport function ProductFromJSON(json: any): Product {\n    return ProductFromJSONTyped(json, false);\n}\n\nexport function ProductFromJSONTyped(json: any, ignoreDiscriminator: boolean): Product {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'id': !exists(json, 'id') ? undefined : json['id'],\n        'categoryId': !exists(json, 'categoryId') ? undefined : json['categoryId'],\n    };\n}\n\nexport function ProductToJSON(value?: Product | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'id': value.id,\n        'categoryId': value.categoryId,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Specifies the at_property via the token field. It can be used to control the scope for the delivery. \n * @export\n * @interface Property\n */\nexport interface Property {\n    /**\n     * The at_property token  Validation * Required if the property is specified. \n     * @type {string}\n     * @memberof Property\n     */\n    token: string;\n}\n\nexport function PropertyFromJSON(json: any): Property {\n    return PropertyFromJSONTyped(json, false);\n}\n\nexport function PropertyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Property {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token': json['token'],\n    };\n}\n\nexport function PropertyToJSON(value?: Property | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token': value.token,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    QAModePreviewIndex,\n    QAModePreviewIndexFromJSON,\n    QAModePreviewIndexFromJSONTyped,\n    QAModePreviewIndexToJSON,\n} from './';\n\n/**\n * Use this object to enable the QA mode in the request. Use the QA mode to test the look and feel of your site or application for various activities in isolation or together, with the possibilty to match or not match specified audiences, select a specific experience, count the impressions/visits for the reporting or not. \n * @export\n * @interface QAMode\n */\nexport interface QAMode {\n    /**\n     * The encrypted token for the QA mode. It contains the list of the activity ids that are allowed to be executed in QA mode. Validation   * After decryption, the client code from the token should match the one from the request.   * After decryption, activities with the ids specified in the token should belong to the client. \n     * @type {string}\n     * @memberof QAMode\n     */\n    token?: string;\n    /**\n     * Specifies whether qa_mode campaigns should be executed in isolation or if they should be evaluated along other active campaigns for current environment. \n     * @type {boolean}\n     * @memberof QAMode\n     */\n    listedActivitiesOnly?: boolean;\n    /**\n     * List of audience ids that should be always evaluated as TRUE in the scope of the delivery request \n     * @type {Array<number>}\n     * @memberof QAMode\n     */\n    evaluateAsTrueAudienceIds?: Array<number>;\n    /**\n     * List of audience ids that should be always evaluated as FALSE in the scope of the delivery request \n     * @type {Array<number>}\n     * @memberof QAMode\n     */\n    evaluateAsFalseAudienceIds?: Array<number>;\n    /**\n     * List of preview indexes. If present, the list cannot be empty. \n     * @type {Array<QAModePreviewIndex>}\n     * @memberof QAMode\n     */\n    previewIndexes?: Array<QAModePreviewIndex>;\n}\n\nexport function QAModeFromJSON(json: any): QAMode {\n    return QAModeFromJSONTyped(json, false);\n}\n\nexport function QAModeFromJSONTyped(json: any, ignoreDiscriminator: boolean): QAMode {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'token': !exists(json, 'token') ? undefined : json['token'],\n        'listedActivitiesOnly': !exists(json, 'listedActivitiesOnly') ? undefined : json['listedActivitiesOnly'],\n        'evaluateAsTrueAudienceIds': !exists(json, 'evaluateAsTrueAudienceIds') ? undefined : json['evaluateAsTrueAudienceIds'],\n        'evaluateAsFalseAudienceIds': !exists(json, 'evaluateAsFalseAudienceIds') ? undefined : json['evaluateAsFalseAudienceIds'],\n        'previewIndexes': !exists(json, 'previewIndexes') ? undefined : ((json['previewIndexes'] as Array<any>).map(QAModePreviewIndexFromJSON)),\n    };\n}\n\nexport function QAModeToJSON(value?: QAMode | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'token': value.token,\n        'listedActivitiesOnly': value.listedActivitiesOnly,\n        'evaluateAsTrueAudienceIds': value.evaluateAsTrueAudienceIds,\n        'evaluateAsFalseAudienceIds': value.evaluateAsFalseAudienceIds,\n        'previewIndexes': value.previewIndexes === undefined ? undefined : ((value.previewIndexes as Array<any>).map(QAModePreviewIndexToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface QAModePreviewIndex\n */\nexport interface QAModePreviewIndex {\n    /**\n     * Index references the activity in the activity list (from the encrypted token). Validation   * If the activity list index is out of boundaries of the activities list in the token or if it is null it will  be ignored.   * Activity list index starts with 1.   * Should be at least one activity index, and should reference an activity specified in the token. \n     * @type {number}\n     * @memberof QAModePreviewIndex\n     */\n    activityIndex?: number;\n    /**\n     * When specified, the experience with this index in the activity definition will be selected. Validation   * Can be null (unspecified)   * If index is not specified or out of bounds, the experience will be selected via activity experience selector strategy.   * Experience index starts with 1. \n     * @type {number}\n     * @memberof QAModePreviewIndex\n     */\n    experienceIndex?: number;\n}\n\nexport function QAModePreviewIndexFromJSON(json: any): QAModePreviewIndex {\n    return QAModePreviewIndexFromJSONTyped(json, false);\n}\n\nexport function QAModePreviewIndexFromJSONTyped(json: any, ignoreDiscriminator: boolean): QAModePreviewIndex {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'activityIndex': !exists(json, 'activityIndex') ? undefined : json['activityIndex'],\n        'experienceIndex': !exists(json, 'experienceIndex') ? undefined : json['experienceIndex'],\n    };\n}\n\nexport function QAModePreviewIndexToJSON(value?: QAModePreviewIndex | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'activityIndex': value.activityIndex,\n        'experienceIndex': value.experienceIndex,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Address,\n    AddressFromJSON,\n    AddressFromJSONTyped,\n    AddressToJSON,\n    Order,\n    OrderFromJSON,\n    OrderFromJSONTyped,\n    OrderToJSON,\n    Product,\n    ProductFromJSON,\n    ProductFromJSONTyped,\n    ProductToJSON,\n} from './';\n\n/**\n * Object common for prefetch, execute and notifications in order to specify the request details.\n * @export\n * @interface RequestDetails\n */\nexport interface RequestDetails {\n    /**\n     * \n     * @type {Address}\n     * @memberof RequestDetails\n     */\n    address?: Address;\n    /**\n     * Parameters map. Same object is reused for mbox or profile parameters with slight validation differences. Following names are not allowed for mbox parameters: \\'orderId\\', \\'orderTotal\\', productPurchasedIds\\' Validation (for both mbox and profile parameters):   * Max 50 parameters limit.   * Parameter name should not be blank.   * Parameter name max length 128.   * Parameter name should not start with \\'profile.\\'   * Parameter value length max 5000. \n     * @type {{ [key: string]: string; }}\n     * @memberof RequestDetails\n     */\n    parameters?: { [key: string]: string; };\n    /**\n     * Parameters map. Same object is reused for mbox or profile parameters with slight validation differences. Following names are not allowed for mbox parameters: \\'orderId\\', \\'orderTotal\\', productPurchasedIds\\' Validation (for both mbox and profile parameters):   * Max 50 parameters limit.   * Parameter name should not be blank.   * Parameter name max length 128.   * Parameter name should not start with \\'profile.\\'   * Parameter value length max 5000. \n     * @type {{ [key: string]: string; }}\n     * @memberof RequestDetails\n     */\n    profileParameters?: { [key: string]: string; };\n    /**\n     * \n     * @type {Order}\n     * @memberof RequestDetails\n     */\n    order?: Order;\n    /**\n     * \n     * @type {Product}\n     * @memberof RequestDetails\n     */\n    product?: Product;\n}\n\nexport function RequestDetailsFromJSON(json: any): RequestDetails {\n    return RequestDetailsFromJSONTyped(json, false);\n}\n\nexport function RequestDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestDetails {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),\n        'parameters': !exists(json, 'parameters') ? undefined : json['parameters'],\n        'profileParameters': !exists(json, 'profileParameters') ? undefined : json['profileParameters'],\n        'order': !exists(json, 'order') ? undefined : OrderFromJSON(json['order']),\n        'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product']),\n    };\n}\n\nexport function RequestDetailsToJSON(value?: RequestDetails | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': AddressToJSON(value.address),\n        'parameters': value.parameters,\n        'profileParameters': value.profileParameters,\n        'order': OrderToJSON(value.order),\n        'product': ProductToJSON(value.product),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    ScreenOrientationType,\n    ScreenOrientationTypeFromJSON,\n    ScreenOrientationTypeFromJSONTyped,\n    ScreenOrientationTypeToJSON,\n} from './';\n\n/**\n * The properties that dictate a screen\n * @export\n * @interface Screen\n */\nexport interface Screen {\n    /**\n     * width\n     * @type {number}\n     * @memberof Screen\n     */\n    width?: number;\n    /**\n     * height\n     * @type {number}\n     * @memberof Screen\n     */\n    height?: number;\n    /**\n     * color depth\n     * @type {number}\n     * @memberof Screen\n     */\n    colorDepth?: number;\n    /**\n     * Optional, Used for device detection using the device atlas\n     * @type {number}\n     * @memberof Screen\n     */\n    pixelRatio?: number;\n    /**\n     * \n     * @type {ScreenOrientationType}\n     * @memberof Screen\n     */\n    orientation?: ScreenOrientationType;\n}\n\nexport function ScreenFromJSON(json: any): Screen {\n    return ScreenFromJSONTyped(json, false);\n}\n\nexport function ScreenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Screen {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'width': !exists(json, 'width') ? undefined : json['width'],\n        'height': !exists(json, 'height') ? undefined : json['height'],\n        'colorDepth': !exists(json, 'colorDepth') ? undefined : json['colorDepth'],\n        'pixelRatio': !exists(json, 'pixelRatio') ? undefined : json['pixelRatio'],\n        'orientation': !exists(json, 'orientation') ? undefined : ScreenOrientationTypeFromJSON(json['orientation']),\n    };\n}\n\nexport function ScreenToJSON(value?: Screen | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'width': value.width,\n        'height': value.height,\n        'colorDepth': value.colorDepth,\n        'pixelRatio': value.pixelRatio,\n        'orientation': ScreenOrientationTypeToJSON(value.orientation),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * Enables the trace for delivery API. At present it is not be possible to set the metrics and packages for the trace. \n * @export\n * @interface Trace\n */\nexport interface Trace {\n    /**\n     * \n     * @type {string}\n     * @memberof Trace\n     */\n    authorizationToken: string;\n    /**\n     * A String dictionary of client SDK usage tracking and internal diagnostics metadata. \n     * @type {{ [key: string]: string; }}\n     * @memberof Trace\n     */\n    usage?: { [key: string]: string; };\n}\n\nexport function TraceFromJSON(json: any): Trace {\n    return TraceFromJSONTyped(json, false);\n}\n\nexport function TraceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Trace {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'authorizationToken': json['authorizationToken'],\n        'usage': !exists(json, 'usage') ? undefined : json['usage'],\n    };\n}\n\nexport function TraceToJSON(value?: Trace | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'authorizationToken': value.authorizationToken,\n        'usage': value.usage,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface UnexpectedError\n */\nexport interface UnexpectedError {\n    /**\n     * HTTP response codes: * `400` - Validation error (ex. invalid token) * `500` - An internal server error during processing \n     * @type {number}\n     * @memberof UnexpectedError\n     */\n    status: number;\n    /**\n     * error message\n     * @type {string}\n     * @memberof UnexpectedError\n     */\n    message: string;\n}\n\nexport function UnexpectedErrorFromJSON(json: any): UnexpectedError {\n    return UnexpectedErrorFromJSONTyped(json, false);\n}\n\nexport function UnexpectedErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnexpectedError {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'status': json['status'],\n        'message': json['message'],\n    };\n}\n\nexport function UnexpectedErrorToJSON(value?: UnexpectedError | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'status': value.status,\n        'message': value.message,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    AnalyticsResponse,\n    AnalyticsResponseFromJSON,\n    AnalyticsResponseFromJSONTyped,\n    AnalyticsResponseToJSON,\n    Metric,\n    MetricFromJSON,\n    MetricFromJSONTyped,\n    MetricToJSON,\n    Option,\n    OptionFromJSON,\n    OptionFromJSONTyped,\n    OptionToJSON,\n} from './';\n\n/**\n * This object will contain all the options for the selectors set for the current view, from the active activities, in case the context and targeting conditions from the request have been matched. \n * @export\n * @interface View\n */\nexport interface View {\n    /**\n     * View Name - Unique view name. If the activity has a metric with a view with this name it will be matched, providing the Key matches as well or is null and view and metric targeting is matched. \n     * @type {string}\n     * @memberof View\n     */\n    name?: string;\n    /**\n     * View Key - An optional encoded String identifier used in advanced scenarios, such as View fingerprinting. Same matching conditions as for View Name. \n     * @type {string}\n     * @memberof View\n     */\n    key?: string;\n    /**\n     * The prefetched content (options) to be displayed for the current view. \n     * @type {Array<Option>}\n     * @memberof View\n     */\n    options?: Array<Option>;\n    /**\n     * Click track metrics for the current view. \n     * @type {Array<Metric>}\n     * @memberof View\n     */\n    metrics?: Array<Metric>;\n    /**\n     * \n     * @type {AnalyticsResponse}\n     * @memberof View\n     */\n    analytics?: AnalyticsResponse;\n    /**\n     * View state token that must be sent back with display notification for the view.\n     * @type {string}\n     * @memberof View\n     */\n    state?: string;\n    /**\n     * The object containing all trace data for the request, only present if the trace token was provided in the request. \n     * @type {{ [key: string]: object; }}\n     * @memberof View\n     */\n    trace?: { [key: string]: object; };\n}\n\nexport function ViewFromJSON(json: any): View {\n    return ViewFromJSONTyped(json, false);\n}\n\nexport function ViewFromJSONTyped(json: any, ignoreDiscriminator: boolean): View {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'key': !exists(json, 'key') ? undefined : json['key'],\n        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(OptionFromJSON)),\n        'metrics': !exists(json, 'metrics') ? undefined : ((json['metrics'] as Array<any>).map(MetricFromJSON)),\n        'analytics': !exists(json, 'analytics') ? undefined : AnalyticsResponseFromJSON(json['analytics']),\n        'state': !exists(json, 'state') ? undefined : json['state'],\n        'trace': !exists(json, 'trace') ? undefined : json['trace'],\n    };\n}\n\nexport function ViewToJSON(value?: View | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'key': value.key,\n        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(OptionToJSON)),\n        'metrics': value.metrics === undefined ? undefined : ((value.metrics as Array<any>).map(MetricToJSON)),\n        'analytics': AnalyticsResponseToJSON(value.analytics),\n        'state': value.state,\n        'trace': value.trace,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    Address,\n    AddressFromJSON,\n    AddressFromJSONTyped,\n    AddressToJSON,\n    Order,\n    OrderFromJSON,\n    OrderFromJSONTyped,\n    OrderToJSON,\n    Product,\n    ProductFromJSON,\n    ProductFromJSONTyped,\n    ProductToJSON,\n    RequestDetails,\n    RequestDetailsFromJSON,\n    RequestDetailsFromJSONTyped,\n    RequestDetailsToJSON,\n    ViewRequestAllOf,\n    ViewRequestAllOfFromJSON,\n    ViewRequestAllOfFromJSONTyped,\n    ViewRequestAllOfToJSON,\n} from './';\n\n/**\n * View request\n * @export\n * @interface ViewRequest\n */\nexport interface ViewRequest {\n    /**\n     * \n     * @type {Address}\n     * @memberof ViewRequest\n     */\n    address?: Address;\n    /**\n     * Parameters map. Same object is reused for mbox or profile parameters with slight validation differences. Following names are not allowed for mbox parameters: \\'orderId\\', \\'orderTotal\\', productPurchasedIds\\' Validation (for both mbox and profile parameters):   * Max 50 parameters limit.   * Parameter name should not be blank.   * Parameter name max length 128.   * Parameter name should not start with \\'profile.\\'   * Parameter value length max 5000. \n     * @type {{ [key: string]: string; }}\n     * @memberof ViewRequest\n     */\n    parameters?: { [key: string]: string; };\n    /**\n     * Parameters map. Same object is reused for mbox or profile parameters with slight validation differences. Following names are not allowed for mbox parameters: \\'orderId\\', \\'orderTotal\\', productPurchasedIds\\' Validation (for both mbox and profile parameters):   * Max 50 parameters limit.   * Parameter name should not be blank.   * Parameter name max length 128.   * Parameter name should not start with \\'profile.\\'   * Parameter value length max 5000. \n     * @type {{ [key: string]: string; }}\n     * @memberof ViewRequest\n     */\n    profileParameters?: { [key: string]: string; };\n    /**\n     * \n     * @type {Order}\n     * @memberof ViewRequest\n     */\n    order?: Order;\n    /**\n     * \n     * @type {Product}\n     * @memberof ViewRequest\n     */\n    product?: Product;\n    /**\n     * View Name - Unique view name. If the activity has a metric with a view with this name it will be matched, providing the Key matches as well or is null and view and metric targeting is matched. \n     * @type {string}\n     * @memberof ViewRequest\n     */\n    name?: string;\n    /**\n     * View Key - An optional encoded String identifier used in advanced scenarios, such as View fingerprinting. Same matching conditions as for View Name. \n     * @type {string}\n     * @memberof ViewRequest\n     */\n    key?: string;\n}\n\nexport function ViewRequestFromJSON(json: any): ViewRequest {\n    return ViewRequestFromJSONTyped(json, false);\n}\n\nexport function ViewRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewRequest {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'address': !exists(json, 'address') ? undefined : AddressFromJSON(json['address']),\n        'parameters': !exists(json, 'parameters') ? undefined : json['parameters'],\n        'profileParameters': !exists(json, 'profileParameters') ? undefined : json['profileParameters'],\n        'order': !exists(json, 'order') ? undefined : OrderFromJSON(json['order']),\n        'product': !exists(json, 'product') ? undefined : ProductFromJSON(json['product']),\n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'key': !exists(json, 'key') ? undefined : json['key'],\n    };\n}\n\nexport function ViewRequestToJSON(value?: ViewRequest | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'address': AddressToJSON(value.address),\n        'parameters': value.parameters,\n        'profileParameters': value.profileParameters,\n        'order': OrderToJSON(value.order),\n        'product': ProductToJSON(value.product),\n        'name': value.name,\n        'key': value.key,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * \n * @export\n * @interface ViewRequestAllOf\n */\nexport interface ViewRequestAllOf {\n    /**\n     * View Name - Unique view name. If the activity has a metric with a view with this name it will be matched, providing the Key matches as well or is null and view and metric targeting is matched. \n     * @type {string}\n     * @memberof ViewRequestAllOf\n     */\n    name?: string;\n    /**\n     * View Key - An optional encoded String identifier used in advanced scenarios, such as View fingerprinting. Same matching conditions as for View Name. \n     * @type {string}\n     * @memberof ViewRequestAllOf\n     */\n    key?: string;\n}\n\nexport function ViewRequestAllOfFromJSON(json: any): ViewRequestAllOf {\n    return ViewRequestAllOfFromJSONTyped(json, false);\n}\n\nexport function ViewRequestAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewRequestAllOf {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'name': !exists(json, 'name') ? undefined : json['name'],\n        'key': !exists(json, 'key') ? undefined : json['key'],\n    };\n}\n\nexport function ViewRequestAllOfToJSON(value?: ViewRequestAllOf | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'name': value.name,\n        'key': value.key,\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\nimport {\n    CustomerId,\n    CustomerIdFromJSON,\n    CustomerIdFromJSONTyped,\n    CustomerIdToJSON,\n} from './';\n\n/**\n * Object that contains the identifiers for the visitor. If no id is provided in the first request, Target will generate a VisitorId with a tntId. The code that runs on the client side is then responsible for passing this tntId value on all subsequent calls.  Validation   * Either tntId, thirdPartyId or maketingCloudVisistorId required. \n * @export\n * @interface VisitorId\n */\nexport interface VisitorId {\n    /**\n     * Tnt id - an unique identifier (UUID). If no visitor id is provided the TNT id will be generated by the TNT server. The TNT id retunred by the server may also contain the profile location hint, with the same format as for other endpoints (standard/ajax/json/..). Example 32440324234-2343423.23_41, in this example the 23_41 is the profile location hint. Tnt id retuned in the response (containting the profile location hint) should be used in the subsequent requests  Validation   * Should not contain a \\'.\\' (dot) unless the dot delimits the location hint. \n     * @type {string}\n     * @memberof VisitorId\n     */\n    tntId?: string;\n    /**\n     * Third party id \n     * @type {string}\n     * @memberof VisitorId\n     */\n    thirdPartyId?: string;\n    /**\n     * Marketing cloud visitor id \n     * @type {string}\n     * @memberof VisitorId\n     */\n    marketingCloudVisitorId?: string;\n    /**\n     * Along with the marketing cloud visitor id, you can associate additional customer ids  Validation   * No null elements. \n     * @type {Array<CustomerId>}\n     * @memberof VisitorId\n     */\n    customerIds?: Array<CustomerId>;\n}\n\nexport function VisitorIdFromJSON(json: any): VisitorId {\n    return VisitorIdFromJSONTyped(json, false);\n}\n\nexport function VisitorIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): VisitorId {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'tntId': !exists(json, 'tntId') ? undefined : json['tntId'],\n        'thirdPartyId': !exists(json, 'thirdPartyId') ? undefined : json['thirdPartyId'],\n        'marketingCloudVisitorId': !exists(json, 'marketingCloudVisitorId') ? undefined : json['marketingCloudVisitorId'],\n        'customerIds': !exists(json, 'customerIds') ? undefined : ((json['customerIds'] as Array<any>).map(CustomerIdFromJSON)),\n    };\n}\n\nexport function VisitorIdToJSON(value?: VisitorId | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'tntId': value.tntId,\n        'thirdPartyId': value.thirdPartyId,\n        'marketingCloudVisitorId': value.marketingCloudVisitorId,\n        'customerIds': value.customerIds === undefined ? undefined : ((value.customerIds as Array<any>).map(CustomerIdToJSON)),\n    };\n}\n\n\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime';\n/**\n * The dimensions that dictate a window\n * @export\n * @interface Window\n */\nexport interface Window {\n    /**\n     * width\n     * @type {number}\n     * @memberof Window\n     */\n    width?: number;\n    /**\n     * height\n     * @type {number}\n     * @memberof Window\n     */\n    height?: number;\n}\n\nexport function WindowFromJSON(json: any): Window {\n    return WindowFromJSONTyped(json, false);\n}\n\nexport function WindowFromJSONTyped(json: any, ignoreDiscriminator: boolean): Window {\n    if ((json === undefined) || (json === null)) {\n        return json;\n    }\n    return {\n        \n        'width': !exists(json, 'width') ? undefined : json['width'],\n        'height': !exists(json, 'height') ? undefined : json['height'],\n    };\n}\n\nexport function WindowToJSON(value?: Window | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'width': value.width,\n        'height': value.height,\n    };\n}\n\n\n","export type DateTime = Date;\n\nexport function DateTimeFromJSON(value:any):Date {\n    return new Date(value);\n}\n\nexport function DateTimeFromJSONTyped(value: any, ignoreDiscriminator: boolean):Date {\n    return new Date(value);\n}\n\nexport function DateTimeToJSON(value?: DateTime | null):any {\n    return value != null && typeof value !== 'undefined' ? value.toISOString(): '';\n}","export type OneOfstringobjectarray = string|object|any[];\nexport type OneOfstringobject = string|object;\n\n\nexport function OneOfstringobjectFromJSON(value:any):OneOfstringobject {\n    return value;\n}\n\nexport function OneOfstringobjectFromJSONTyped(value: any, ignoreDiscriminator: boolean):OneOfstringobject {\n    return value;\n}\n\nexport function OneOfstringobjectToJSON(value?: OneOfstringobject | null):any {\n    return value;\n}\n\nexport function OneOfstringobjectarrayFromJSON(value:any):OneOfstringobjectarray {\n    return value;\n}\n\nexport function OneOfstringobjectarrayFromJSONTyped(value: any, ignoreDiscriminator: boolean):OneOfstringobjectarray {\n    return value;\n}\n\nexport function OneOfstringobjectarrayToJSON(value?: OneOfstringobject | null):any {\n    return value;\n}","/* tslint:disable */\n/* eslint-disable */\n/**\n * Adobe Target Delivery API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport * as runtime from '../runtime';\nimport {\n    DeliveryRequest,\n    DeliveryRequestFromJSON,\n    DeliveryRequestToJSON,\n    DeliveryResponse,\n    DeliveryResponseFromJSON,\n    DeliveryResponseToJSON,\n    UnexpectedError,\n    UnexpectedErrorFromJSON,\n    UnexpectedErrorToJSON,\n} from '../models';\n\nexport interface ExecuteDeliveryRequest {\n    client: string;\n    sessionId: string;\n    deliveryRequest: DeliveryRequest;\n    version?: string;\n}\n\n/**\n * no description\n */\nexport class DeliveryAPIApi extends runtime.BaseAPI {\n\n    /**\n     * Retrieve Target offers\n     */\n    async executeRaw(requestParameters: ExecuteDeliveryRequest): Promise<runtime.ApiResponse<DeliveryResponse>> {\n        if (requestParameters.client === null || requestParameters.client === undefined) {\n            throw new runtime.RequiredError('client','Required parameter requestParameters.client was null or undefined when calling execute.');\n        }\n\n        if (requestParameters.sessionId === null || requestParameters.sessionId === undefined) {\n            throw new runtime.RequiredError('sessionId','Required parameter requestParameters.sessionId was null or undefined when calling execute.');\n        }\n\n        if (requestParameters.deliveryRequest === null || requestParameters.deliveryRequest === undefined) {\n            throw new runtime.RequiredError('deliveryRequest','Required parameter requestParameters.deliveryRequest was null or undefined when calling execute.');\n        }\n\n        const queryParameters: runtime.HTTPQuery = {};\n\n        if (requestParameters.client !== undefined) {\n            queryParameters['client'] = requestParameters.client;\n        }\n\n        if (requestParameters.sessionId !== undefined) {\n            queryParameters['sessionId'] = requestParameters.sessionId;\n        }\n\n        if (requestParameters.version !== undefined) {\n            queryParameters['version'] = requestParameters.version;\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {};\n\n        headerParameters['Content-Type'] = 'application/json';\n\n        const response = await this.request({\n            path: `/rest/v1/delivery`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n            body: DeliveryRequestToJSON(requestParameters.deliveryRequest),\n        });\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => DeliveryResponseFromJSON(jsonValue));\n    }\n\n    /**\n     * Retrieve Target offers\n     */\n    async execute(client: string, sessionId: string, deliveryRequest: DeliveryRequest, version?: string): Promise<DeliveryResponse> {\n        const response = await this.executeRaw({ client: client, sessionId: sessionId, deliveryRequest: deliveryRequest, version: version });\n        return await response.value();\n    }\n\n}\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","BASE_PATH","replace","configuration","Configuration","url","init","fetchParams","_a","middleware","_i","pre","fetch","fetchApi","_d","response","_c","_b","post","clone","BaseAPI","middlewares","concat","preMiddlewares","map","withMiddleware","postMiddlewares","context","createFetchParams","status","basePath","path","undefined","query","keys","queryParamsStringify","FormData","URLSearchParams","Blob","JSON","stringify","headers","method","credentials","slice","field","msg","_super","_this","tslib_1.__extends","Error","timeout","window","bind","input","timer","setTimeout","err","finally","clearTimeout","querystring","username","password","apiKey","accessToken","json","key","params","prefix","fullKey","multiValue","singleValue","encodeURIComponent","String","join","filter","part","AuthenticatedState","ChannelType","DeviceType","LoggingType","MetricType","MobilePlatformType","OptionType","ScreenOrientationType","raw","transformer","jsonValue","JSONApiResponse","VoidApiResponse","BlobApiResponse","blob","TextApiResponse","text","ignoreDiscriminator","type","exists","selector","cssSelector","content","AddressFromJSONTyped","referringUrl","AnalyticsPayloadFromJSONTyped","pe","tnta","AnalyticsRequestFromJSONTyped","supplementalDataId","logging","LoggingTypeFromJSON","trackingServer","trackingServerSecure","AnalyticsResponseFromJSONTyped","payload","AnalyticsPayloadFromJSON","AnalyticsPayloadToJSON","ApplicationFromJSONTyped","id","name","version","AudienceManagerFromJSONTyped","locationHint","AuthenticatedStateFromJSONTyped","BrowserFromJSONTyped","host","webGLRenderer","ChannelTypeFromJSONTyped","ContextFromJSONTyped","channel","ChannelTypeFromJSON","mobilePlatform","MobilePlatformFromJSON","application","ApplicationFromJSON","screen","ScreenFromJSON","WindowFromJSON","browser","BrowserFromJSON","address","AddressFromJSON","geo","GeoFromJSON","timeOffsetInMinutes","userAgent","beacon","MobilePlatformToJSON","ApplicationToJSON","ScreenToJSON","WindowToJSON","BrowserToJSON","AddressToJSON","GeoToJSON","CustomerIdFromJSONTyped","integrationCode","authenticatedState","AuthenticatedStateFromJSON","requestId","impressionId","VisitorIdFromJSON","environmentId","property","PropertyFromJSON","trace","TraceFromJSON","ContextFromJSON","experienceCloud","ExperienceCloudFromJSON","execute","ExecuteRequestFromJSON","prefetch","PrefetchRequestFromJSON","notifications","NotificationFromJSON","qaMode","QAModeFromJSON","VisitorIdToJSON","PropertyToJSON","TraceToJSON","ContextToJSON","ExperienceCloudToJSON","ExecuteRequestToJSON","PrefetchRequestToJSON","NotificationToJSON","QAModeToJSON","DeliveryResponseFromJSONTyped","client","edgeHost","ExecuteResponseFromJSON","PrefetchResponseFromJSON","DeviceTypeFromJSONTyped","ExecuteRequestFromJSONTyped","pageLoad","RequestDetailsFromJSON","mboxes","MboxRequestFromJSON","RequestDetailsToJSON","MboxRequestToJSON","ExecuteResponseFromJSONTyped","PageLoadResponseFromJSON","MboxResponseFromJSON","PageLoadResponseToJSON","MboxResponseToJSON","ExperienceCloudFromJSONTyped","audienceManager","AudienceManagerFromJSON","analytics","AnalyticsRequestFromJSON","AudienceManagerToJSON","AnalyticsRequestToJSON","GeoFromJSONTyped","latitude","longitude","LoggingTypeFromJSONTyped","MboxRequestFromJSONTyped","parameters","profileParameters","order","OrderFromJSON","product","ProductFromJSON","index","OrderToJSON","ProductToJSON","MboxResponseFromJSONTyped","options","OptionFromJSON","metrics","MetricFromJSON","AnalyticsResponseFromJSON","OptionToJSON","MetricToJSON","AnalyticsResponseToJSON","MetricFromJSONTyped","MetricTypeFromJSON","eventToken","MetricTypeFromJSONTyped","MobilePlatformFromJSONTyped","deviceName","deviceType","DeviceTypeFromJSON","platformType","MobilePlatformTypeFromJSON","MobilePlatformTypeFromJSONTyped","NotificationFromJSONTyped","timestamp","tokens","mbox","NotificationMboxFromJSON","view","NotificationViewFromJSON","NotificationPageLoadFromJSON","NotificationMboxToJSON","NotificationViewToJSON","NotificationPageLoadToJSON","NotificationMboxFromJSONTyped","state","NotificationPageLoadFromJSONTyped","NotificationViewFromJSONTyped","OptionFromJSONTyped","OptionTypeFromJSON","responseTokens","OptionTypeFromJSONTyped","OrderFromJSONTyped","total","purchasedProductIds","time","DateTimeFromJSON","experienceLocalId","duplicate","outlier","DateTimeToJSON","PageLoadResponseFromJSONTyped","PrefetchMboxResponseFromJSONTyped","PrefetchRequestFromJSONTyped","views","ViewRequestFromJSON","ViewRequestToJSON","PrefetchResponseFromJSONTyped","ViewFromJSON","PrefetchMboxResponseFromJSON","ViewToJSON","PrefetchMboxResponseToJSON","ProductFromJSONTyped","categoryId","PropertyFromJSONTyped","token","QAModeFromJSONTyped","listedActivitiesOnly","evaluateAsTrueAudienceIds","evaluateAsFalseAudienceIds","previewIndexes","QAModePreviewIndexFromJSON","QAModePreviewIndexToJSON","QAModePreviewIndexFromJSONTyped","activityIndex","experienceIndex","RequestDetailsFromJSONTyped","ScreenFromJSONTyped","width","height","colorDepth","pixelRatio","orientation","ScreenOrientationTypeFromJSON","ScreenOrientationTypeFromJSONTyped","TraceFromJSONTyped","authorizationToken","usage","message","ViewFromJSONTyped","ViewRequestFromJSONTyped","VisitorIdFromJSONTyped","tntId","thirdPartyId","marketingCloudVisitorId","customerIds","CustomerIdFromJSON","CustomerIdToJSON","WindowFromJSONTyped","Date","toISOString","DeliveryAPIApi","requestParameters","runtime.RequiredError","sessionId","deliveryRequest","queryParameters","headerParameters","request","DeliveryRequestToJSON","runtime.JSONApiResponse","DeliveryResponseFromJSON","executeRaw","runtime.BaseAPI","ActionFromJSONTyped","csv","ssv","tsv","pipes","DeliveryRequestFromJSONTyped","ExecuteResponseToJSON","PrefetchResponseToJSON","MboxRequestAllOfFromJSONTyped","NotificationAllOfFromJSONTyped","PrefetchMboxResponseAllOfFromJSONTyped","UnexpectedErrorFromJSONTyped","ViewRequestAllOfFromJSONTyped","consumes","consumes_1","contentType","data","fn","reduce","acc"],"mappings":"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"}